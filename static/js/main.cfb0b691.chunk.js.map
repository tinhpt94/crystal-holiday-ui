{"version":3,"sources":["constants/auth.js","actions/auth.js","constants/product.js","actions/product.js","constants/customer.js","actions/customer.js","components/shared/SiteWrapper.js","pages/Home.js","services/base_request.js","services/auth.js","sagas/auth.js","services/product.js","sagas/product.js","services/customer.js","sagas/customer.js","constants/order.js","services/order.js","actions/order.js","sagas/order.js","sagas/index.js","reducers/auth.js","reducers/product.js","reducers/customer.js","reducers/order.js","reducers/index.js","store.js","pages/LoginPage.js","pages/LogoutPage.js","pages/CustomerPage.js","pages/ProductPage.js","components/shared/OrderTable.js","pages/CustomerDetailPage.js","pages/OrderDetailPage.js","App.js","index.js"],"names":["AUTH_REQUEST","GET_CURRENT_USER_REQUEST","loginRequest","payload","type","types","loginSuccess","response","data","loginError","error","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserFailed","logout","PRODUCT_LIST_REQUEST","fetchProductRequest","param","fetchProductSuccess","fetchProductFailed","CUSTOMER_LIST_REQUEST","CUSTOMER_DETAIL_REQUEST","CUSTOMER_ORDER_LIST_REQUEST","getCustomers","params","getCustomersSuccess","getCustomersFailed","getCustomer","idCustomer","id","getCustomerSuccess","getCustomerFailed","getCustomerOrders","getCustomerOrdersSuccess","getCustomerOrdersFailed","navBarItems","value","to","icon","LinkComponent","withRouter","NavLink","useExact","subItems","SiteWrapper","state","notificationsObjects","unread","avatarURL","message","time","accountDropdownProps","name","description","options","badge","isDivider","componentDidMount","props","store","auth","isAuthenticated","user","actions","shouldComponentUpdate","nextProps","nextState","componentWillReceiveProps","setState","update","$set","role","this","unreadCount","reduce","a","v","Wrapper","headerProps","href","alt","imageURL","navItems","Item","className","target","outline","size","RootComponent","color","notificationsTray","markAllAsRead","map","setTimeout","accountDropdown","navProps","itemsObjects","routerContextComponentType","RouterContextProvider","footerProps","links","note","copyright","rel","nav","Col","auto","children","React","connect","default","routing","locationBeforeTransitions","dispatch","bindActionCreators","Home","updateInHouseData","inhouseData","Content","title","Row","cards","width","sm","lg","layout","movement","total","label","Header","Title","style","height","columns","groups","colors","data1","names","axis","y","padding","bottom","show","tick","outer","x","left","right","legend","position","inset","anchor","step","tooltip","format","point","striped","responsive","ColHeader","colSpan","Body","link","md","Link","data2","top","data3","data4","header","content","progressColor","progressWidth","footer","deck","highlightRowOnHover","hasOutline","verticalAlign","alignContent","status","muted","Small","Bar","payment","trigger","Trigger","toggle","items","Fragment","ItemDivider","prefix","chart","transition","duration","pattern","Component","axios","create","baseURL","responseType","crossDomain","login","rest","post","getCurrentUser","get","headers","Authorization","localStorage","getItem","action","call","restAPI","put","authorization","takeLatest","getProducts","product","customer","ORDER_DETAIL_REQUEST","PAYMENT_LIST_REQUEST","getOrderById","getPaymentHistoriesByOrderId","findOrderByIdRequest","findOrderByIdSuccess","findOrderByIdFailed","findPaymentHistoryByOrderIdRequest","findPaymentHistoryByOrderIdSuccess","findPaymentHistoryByOrderIdFailed","order","rootSaga","fork","DEFAULT_STATE","Immutable","isRequesting","products","customers","orders","paymentHistories","combineReducers","setIn","setItem","removeItem","configureStore","sagaMiddleware","createSagaMiddleware","createStore","reducers","routerReducer","composeWithDevTools","applyMiddleware","runSaga","run","LoginPage","initialValues","email","password","validate","values","errors","onSubmit","setSubmitting","setErrors","username","render","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onChange","onBlur","LogoutPage","CustomerPage","showItem","history","push","key","phone","onClick","dataIndex","mapProductToDataSource","cardType","seasonType","roomType","unitPrice","cardValue","quantity","annualFee","reSignFee","ProductPage","dataSource","mapOrderToDataSource","cardName","contractValue","contractValueVat","teleSale","sale","saleAdmin","saleManager","OrderTable","fixed","text","record","logRecord","scroll","rowKey","rowItem","CustomerDetailPage","match","address1","length","sum","mapToDataSource","paymentDate","date","valueVat","paymentType","comment","OrderDetailPage","discount","App","exact","path","component","ReactDOM","locale","document","getElementById"],"mappings":"swDAAaA,EAAe,eAGfC,EAA2B,2BCD3BC,EAAe,SAAAC,GAAO,MAAK,CACtCC,KAAMC,EACNF,YAGWG,EAAe,SAAAC,GAAQ,MAAK,CACvCH,KDP0B,eCQ1BI,KAAMD,IAGKE,EAAa,SAAAF,GAAQ,MAAK,CACrCH,KDXyB,cCYzBM,MAAOH,IAGII,EAAwB,iBAAO,CAC1CP,KAAMC,IAGKO,EAAwB,SAAAL,GAAQ,MAAK,CAChDH,KDlBsC,2BCmBtCI,KAAMD,IAGKM,EAAuB,SAAAN,GAAQ,MAAK,CAC/CH,KDtBqC,0BCuBrCM,MAAOH,IAGIO,EAAS,iBAAO,CAAEV,KDzBD,mBENjBW,EAAuB,uBCEvBC,EAAsB,SAAAC,GAAK,MAAK,CAC3Cb,KAAMC,EACNY,UAGWC,EAAsB,SAAAV,GAAI,MAAK,CAC1CJ,KDPkC,uBCQlCI,SAGWW,EAAqB,SAAAT,GAAK,MAAK,CAC1CN,KDXiC,sBCYjCM,UCdWU,EAAwB,wBAIxBC,EAA0B,0BAI1BC,EAA8B,8BCN9BC,EAAe,SAAAC,GAAM,MAAK,CACrCpB,KAAMC,EACNmB,WAGWC,EAAsB,SAAAjB,GAAI,MAAK,CAC1CJ,KDPmC,wBCQnCI,SAGWkB,EAAqB,SAAAhB,GAAK,MAAK,CAC1CN,KDXkC,uBCYlCM,UAGWiB,EAAc,SAAAC,GAAU,MAAK,CACxCxB,KAAMC,EACNwB,GAAID,IAGOE,EAAqB,SAAAtB,GAAI,MAAK,CACzCJ,KDlBqC,0BCmBrCI,SAGWuB,EAAoB,SAAArB,GAAK,MAAK,CACzCN,KDtBoC,yBCuBpCM,UAGWsB,EAAoB,SAAAJ,GAAU,MAAK,CAC9CxB,KAAMC,EACNwB,GAAID,IAGOK,EAA2B,SAAAzB,GAAI,MAAK,CAC/CJ,KD7ByC,8BC8BzCI,SAGW0B,EAA0B,SAAAxB,GAAK,MAAK,CAC/CN,KDjCwC,6BCkCxCM,UC5BIyB,EAAc,CAClB,CACEC,MAAO,OACPC,GAAI,IACJC,KAAM,OACNC,cAAeC,YAAWC,KAC1BC,UAAU,GAEZ,CACEN,MAAO,YACPE,KAAM,MACNK,SAAU,CACR,CACEP,MAAO,eACPC,GAAI,SACJE,cAAeC,YAAWC,MAE5B,CAAEL,MAAO,SAAUC,GAAI,UAAWE,cAAeC,YAAWC,MAC5D,CACEL,MAAO,gBACPC,GAAI,iBACJE,cAAeC,YAAWC,QAIhC,CACEL,MAAO,aACPE,KAAM,WACNK,SAAU,CACR,CAAEP,MAAO,OAAQC,GAAI,QAASE,cAAeC,YAAWC,MACxD,CAAEL,MAAO,QAASC,GAAI,SAAUE,cAAeC,YAAWC,MAC1D,CAAEL,MAAO,QAASC,GAAI,SAAUE,cAAeC,YAAWC,MAC1D,CAAEL,MAAO,OAAQC,GAAI,QAASE,cAAeC,YAAWC,QAG5D,CACEL,MAAO,QACPE,KAAM,OACNK,SAAU,CACR,CAAEP,MAAO,WAAYC,GAAI,YAAaE,cAAeC,YAAWC,MAChE,CAAEL,MAAO,QAASC,GAAI,SAAUE,cAAeC,YAAWC,MAC1D,CACEL,MAAO,WACPC,GAAI,YACJE,cAAeC,YAAWC,MAE5B,CACEL,MAAO,kBACPC,GAAI,mBACJE,cAAeC,YAAWC,MAE5B,CAAEL,MAAO,UAAWC,GAAI,WAAYE,cAAeC,YAAWC,MAC9D,CAAEL,MAAO,YAAaC,GAAI,OAAQE,cAAeC,YAAWC,MAC5D,CAAEL,MAAO,YAAaC,GAAI,OAAQE,cAAeC,YAAWC,MAC5D,CAAEL,MAAO,YAAaC,GAAI,OAAQE,cAAeC,YAAWC,MAC5D,CAAEL,MAAO,YAAaC,GAAI,OAAQE,cAAeC,YAAWC,MAC5D,CAAEL,MAAO,YAAaC,GAAI,OAAQE,cAAeC,YAAWC,MAC5D,CAAEL,MAAO,QAASC,GAAI,SAAUE,cAAeC,YAAWC,MAC1D,CACEL,MAAO,aACPC,GAAI,cACJE,cAAeC,YAAWC,MAE5B,CAAEL,MAAO,MAAOC,GAAI,OAAQE,cAAeC,YAAWC,QAG1D,CACEL,MAAO,QACPC,GAAI,iBACJC,KAAM,eACNC,cAAeC,YAAWC,MAE5B,CACEL,MAAO,UACPC,GAAI,WACJC,KAAM,QACNC,cAAeC,YAAWC,MAE5B,CACEH,KAAM,YACNF,MAAO,gBACPC,GAEM,wDAKJO,E,2MACJC,MAAQ,CACNC,qBAAsB,CACpB,CACEC,QAAQ,EACRC,UAAW,yBACXC,QACE,gBAAC,WAAD,KACE,wCADF,wDAKFC,KAAM,kBAER,CACEH,QAAQ,EACRC,UAAW,0BACXC,QACE,gBAAC,WAAD,KACE,uCADF,wCAIFC,KAAM,cAER,CACEH,QAAQ,EACRC,UAAW,2BACXC,QACE,gBAAC,WAAD,KACE,sCADF,kDAIFC,KAAM,gBAGVC,qBAAsB,CACpBH,UAAW,6BACXI,KAAM,eACNC,YAAa,gBACbC,QAAS,CACP,CAAEhB,KAAM,OAAQF,MAAO,WACvB,CAAEE,KAAM,WAAYF,MAAO,YAC3B,CAAEE,KAAM,OAAQF,MAAO,QAASmB,MAAO,KACvC,CAAEjB,KAAM,OAAQF,MAAO,WACvB,CAAEoB,WAAW,GACb,CAAElB,KAAM,cAAeF,MAAO,cAC9B,CAAEE,KAAM,UAAWF,MAAO,WAAYC,GAAI,c,EAKhDoB,kBAAoB,WAEhB,EAAKC,MAAMC,MAAMC,KAAKC,iBACQ,MAA9B,EAAKH,MAAMC,MAAMC,KAAKE,MAEtB,EAAKJ,MAAMK,QAAQpD,yB,EAIvBqD,sBAAwB,SAACC,EAAWC,GAClC,OAAOD,EAAUN,OAAS,EAAKD,MAAMC,O,EAGvCQ,0BAA4B,SAAAF,GACO,MAA7BA,EAAUN,MAAMC,KAAKE,MACvB,EAAKM,SAAS,CACZjB,qBAAsBkB,IAAO,EAAKxB,MAAMM,qBAAsB,CAE5DC,KAAM,CAAEkB,KAAML,EAAUN,MAAMC,KAAKE,KAAKV,MACxCC,YAAa,CAAEiB,KAAML,EAAUN,MAAMC,KAAKE,KAAKS,W,wEAK7C,IAAD,OACDzB,EAAuB0B,KAAK3B,MAAMC,sBAAwB,GAC1D2B,EAAcD,KAAK3B,MAAMC,qBAAqB4B,QAClD,SAACC,EAAGC,GAAJ,OAAUD,GAAKC,EAAE7B,UACjB,GAGF,OACE,gBAAC,IAAK8B,QAAN,CACEC,YAAa,CACXC,KAAM,IACNC,IAAK,kBACLC,SAAU,gHACVC,SACE,gBAAC,IAAIC,KAAL,CAAU/E,KAAK,MAAMgF,UAAU,oBAC7B,gBAAC,IAAD,CACEL,KAAK,yCACLM,OAAO,SACPC,SAAO,EACPC,KAAK,KACLC,cAAc,IACdC,MAAM,WANR,gBAYJC,kBAAmB,CACjB5C,uBACA6C,cAAe,kBACb,EAAKvB,UACH,iBAAO,CACLtB,qBAAsB,EAAKD,MAAMC,qBAAqB8C,KACpD,SAAAhB,GAAC,sBAAUA,EAAV,CAAa7B,QAAQ,WAG1B,kBACE8C,YACE,kBACE,EAAKzB,SAAS,CACZtB,qBAAsB,EAAKD,MAAMC,qBAAqB8C,KACpD,SAAAhB,GAAC,sBAAUA,EAAV,CAAa7B,QAAQ,WAG5B,SAGRA,OAAQ0B,GAEVqB,gBAAiBtB,KAAK3B,MAAMM,sBAE9B4C,SAAU,CAAEC,aAAc7D,GAC1B8D,2BAA4BzD,YAAW0D,KACvCC,YAAa,CACXC,MAAO,CACL,qBAAGrB,KAAK,KAAR,cACA,qBAAGA,KAAK,KAAR,eACA,qBAAGA,KAAK,KAAR,cACA,qBAAGA,KAAK,KAAR,eACA,qBAAGA,KAAK,KAAR,aACA,qBAAGA,KAAK,KAAR,cACA,qBAAGA,KAAK,KAAR,gBACA,qBAAGA,KAAK,KAAR,eAEFsB,KACE,4FACFC,UACE,gBAAC,WAAD,2BAEE,qBAAGvB,KAAK,KAAR,iBAFF,aAGE,qBACEA,KAAK,uBACLM,OAAO,SACPkB,IAAI,uBAEH,IALH,gBAOK,IAVP,wBAcFC,IACE,gBAAC,WAAD,KACE,gBAAC,IAAKC,IAAN,CAAUC,MAAM,GACd,gBAAC,IAAD,CAAMtB,UAAU,qCACd,gBAAC,IAAKD,KAAN,CAAWC,UAAU,oBACnB,qBAAGL,KAAK,qBAAR,kBAEF,gBAAC,IAAKI,KAAN,CAAWC,UAAU,oBACnB,qBAAGL,KAAK,cAAR,UAIN,gBAAC,IAAK0B,IAAN,CAAUC,MAAM,GACd,gBAAC,IAAD,CACE3B,KAAK,yCACLQ,KAAK,KACLD,SAAO,EACPG,MAAM,UACND,cAAc,KALhB,mBAcPhB,KAAKd,MAAMiD,c,GAvLMC,aA2MXC,gBAdS,SAAAhE,GACtB,MAAO,CACLc,MAAOd,EAAMiE,QACbC,QAASlE,EAAMkE,QAAQC,8BAIA,SAAAC,GACzB,MAAO,CACLlD,QAASmD,6BAAmB,eAAKnD,GAAgBkD,GACjDA,cAIWJ,CAA6CjE,GCkjB7CuE,G,YA10Bb,WAAYzD,GAAQ,IAAD,8BACjB,4CAAMA,KAMR0D,kBAAoB,SAAC5G,GACnB,EAAK4D,SAAS,CACZiD,YAAa7G,KAPf,EAAKqC,MAAQ,CACXwE,YAAa,IAHE,E,sEAejB,OACE,kBAAC,GAAD,KACE,kBAAC,IAAKC,QAAN,CAAcC,MAAM,aAClB,kBAAC,IAAKC,IAAN,CAAUC,OAAO,GACf,kBAAC,IAAKhB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAWC,OAAQ,EAAGC,SAAU,EAAGC,MAAM,KAAKC,MAAM,iBAEtD,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CACEC,OAAQ,EACRC,UAAW,EACXC,MAAM,KACNC,MAAM,kBAGV,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAWC,OAAQ,EAAGC,SAAU,EAAGC,MAAM,IAAIC,MAAM,iBAErD,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CACEC,OAAQ,EACRC,SAAU,EACVC,MAAM,QACNC,MAAM,eAGV,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CACEC,OAAQ,EACRC,UAAW,EACXC,MAAM,MACNC,MAAM,oBAGV,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAWC,OAAQ,EAAGC,UAAW,EAAGC,MAAM,MAAMC,MAAM,cAExD,kBAAC,IAAKvB,IAAN,CAAUmB,GAAI,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAKK,OAAN,KACE,kBAAC,IAAKC,MAAN,8BAEF,kBAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,SACjB5H,KAAM,CACJ6H,QAAS,CAEP,CACE,QACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGJjI,KAAM,OACNkI,OAAQ,CAAC,CAAC,QAAS,QAAS,UAC5BC,OAAQ,CACNC,MAAOD,IAAM,MAEfE,MAAO,CAELD,MAAO,cAGXE,KAAM,CACJC,EAAG,CACDC,QAAS,CACPC,OAAQ,GAEVC,MAAM,EACNC,KAAM,CACJC,OAAO,IAGXC,EAAG,CACDL,QAAS,CACPM,KAAM,EACNC,MAAO,GAETL,MAAM,IAGVM,OAAQ,CACNC,SAAU,QACVT,QAAS,EACTU,MAAO,CACLC,OAAQ,WACRN,EAAG,GACHN,EAAG,EACHa,KAAM,KAGVC,QAAS,CACPC,OAAQ,CACNnC,MAAO,SAAS0B,GACd,MAAO,MAIbL,QAAS,CACPC,OAAQ,EACRK,MAAO,EACPC,OAAQ,GAEVQ,MAAO,CACLb,MAAM,KAGV,kBAAC,IAAD,CACErB,OAAO,EACPmC,SAAS,EACTC,YAAY,EACZzE,UAAU,iBAEV,kBAAC,IAAM6C,OAAP,KACE,kBAAC,IAAMT,IAAP,KACE,kBAAC,IAAMsC,UAAP,CAAiBC,QAAS,GAA1B,QACA,kBAAC,IAAMD,UAAP,eACA,kBAAC,IAAMA,UAAP,aACA,kBAAC,IAAMA,UAAP,QAGJ,kBAAC,IAAME,KAAP,KACE,kBAAC,IAAMxC,IAAP,KACE,kBAAC,IAAMf,IAAP,CAAWrB,UAAU,OACnB,kBAAC,IAAD,CAAQH,SAAS,6BAEnB,kBAAC,IAAMwB,IAAP,uBACA,kBAAC,IAAMA,IAAP,uBACA,kBAAC,IAAMA,IAAP,CAAWrB,UAAU,eAArB,eACA,kBAAC,IAAMqB,IAAP,CAAWrB,UAAU,OACnB,kBAAC,IAAD,CAAM6E,MAAM,EAAM7G,KAAK,YAG3B,kBAAC,IAAMoE,IAAP,KACE,kBAAC,IAAMf,IAAP,KACE,kBAAC,IAAD,YAEF,kBAAC,IAAMA,IAAP,uBACA,kBAAC,IAAMA,IAAP,uBACA,kBAAC,IAAMA,IAAP,CAAWrB,UAAU,eAArB,kBAGA,kBAAC,IAAMqB,IAAP,KACE,kBAAC,IAAD,CAAMwD,MAAM,EAAM7G,KAAK,YAG3B,kBAAC,IAAMoE,IAAP,KACE,kBAAC,IAAMf,IAAP,KACE,kBAAC,IAAD,CAAQxB,SAAS,+BAEnB,kBAAC,IAAMwB,IAAP,0BACA,kBAAC,IAAMA,IAAP,iCACA,kBAAC,IAAMA,IAAP,CAAWrB,UAAU,eAArB,kBAGA,kBAAC,IAAMqB,IAAP,KACE,kBAAC,IAAD,CAAMwD,MAAM,EAAM7G,KAAK,YAG3B,kBAAC,IAAMoE,IAAP,KACE,kBAAC,IAAMf,IAAP,KACE,kBAAC,IAAD,CAAQxB,SAAS,6BAEnB,kBAAC,IAAMwB,IAAP,qBACA,kBAAC,IAAMA,IAAP,8BACA,kBAAC,IAAMA,IAAP,CAAWrB,UAAU,eAArB,iBACA,kBAAC,IAAMqB,IAAP,KACE,kBAAC,IAAD,CAAMwD,MAAM,EAAM7G,KAAK,YAG3B,kBAAC,IAAMoE,IAAP,KACE,kBAAC,IAAMf,IAAP,KACE,kBAAC,IAAD,CAAQxB,SAAS,gCAEnB,kBAAC,IAAMwB,IAAP,qBACA,kBAAC,IAAMA,IAAP,mBACA,kBAAC,IAAMA,IAAP,CAAWrB,UAAU,eAArB,iBACA,kBAAC,IAAMqB,IAAP,KACE,kBAAC,IAAD,CAAMwD,MAAM,EAAM7G,KAAK,gBAQnC,kBAAC,IAAKqD,IAAN,CAAUyD,GAAI,GACZ,kBAAC,IAAD,CAAO9J,KAAK,WACV,kBAAC,IAAM+J,KAAP,CACEpF,KAEM,uDAHR,0BAQc,IAThB,sBAYA,kBAAC,IAAKyC,IAAN,KACE,kBAAC,IAAKf,IAAN,CAAUkB,GAAI,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAKM,OAAN,KACE,kBAAC,IAAKC,MAAN,qBAEF,kBAAC,IAAK8B,KAAN,KACE,kBAAC,IAAD,CACE7B,MAAO,CAAEC,OAAQ,SACjB5H,KAAM,CACJ6H,QAAS,CAEP,CAAC,QAAS,IACV,CAAC,QAAS,KAEZjI,KAAM,QACNmI,OAAQ,CACNC,MAAOD,IAAM,MACb6B,MAAO7B,IAAO,gBAEhBE,MAAO,CAELD,MAAO,UACP4B,MAAO,YAGXhB,OAAQ,CACNN,MAAM,GAERF,QAAS,CACPC,OAAQ,EACRwB,IAAK,QAMf,kBAAC,IAAK5D,IAAN,CAAUkB,GAAI,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAKM,OAAN,KACE,kBAAC,IAAKC,MAAN,qBAEF,kBAAC,IAAK8B,KAAN,KACE,kBAAC,IAAD,CACE7B,MAAO,CAAEC,OAAQ,SACjB5H,KAAM,CACJ6H,QAAS,CAEP,CAAC,QAAS,IACV,CAAC,QAAS,IACV,CAAC,QAAS,IACV,CAAC,QAAS,KAEZjI,KAAM,MACNmI,OAAQ,CACNC,MAAOD,IAAO,eACd6B,MAAO7B,IAAM,KACb+B,MAAO/B,IAAO,cACdgC,MAAOhC,IAAO,iBAEhBE,MAAO,CAELD,MAAO,IACP4B,MAAO,IACPE,MAAO,IACPC,MAAO,MAGXnB,OAAQ,CACNN,MAAM,GAERF,QAAS,CACPC,OAAQ,EACRwB,IAAK,QAMf,kBAAC,IAAK5D,IAAN,CAAUkB,GAAI,GACZ,kBAAC,IAAD,CACE6C,OAAO,eACPC,QAAQ,KACRC,cAAc,MACdC,cAAe,MAGnB,kBAAC,IAAKlE,IAAN,CAAUkB,GAAI,GACZ,kBAAC,IAAD,CACE6C,OAAO,eACPC,QAAQ,OACRC,cAAc,QACdC,cAAe,MAGnB,kBAAC,IAAKlE,IAAN,CAAUkB,GAAI,GACZ,kBAAC,IAAD,CACE6C,OAAO,eACPC,QAAQ,KACRC,cAAc,SACdC,cAAe,QAKvB,kBAAC,IAAKlE,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEnC,MAAM,OACNnD,KAAK,cACLkI,OACE,uBAAGzF,KAAK,KAAR,OACM,yCAGR6F,OAAQ,yBAGZ,kBAAC,IAAKnE,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEnC,MAAM,QACNnD,KAAK,gBACLkI,OACE,uBAAGzF,KAAK,KAAR,MACK,0CAGP6F,OAAQ,gBAGZ,kBAAC,IAAKnE,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEnC,MAAM,MACNnD,KAAK,QACLkI,OACE,uBAAGzF,KAAK,KAAR,SACQ,2CAGV6F,OAAQ,0BAGZ,kBAAC,IAAKnE,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEnC,MAAM,SACNnD,KAAK,iBACLkI,OACE,uBAAGzF,KAAK,KAAR,OACM,4CAGR6F,OAAQ,iBAId,kBAAC,IAAKpD,IAAN,CAAUC,OAAK,EAACoD,MAAI,GAClB,kBAAC,IAAKpE,IAAN,CAAUiB,MAAO,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmC,YAAU,EACViB,qBAAmB,EACnBC,YAAU,EACVC,cAAc,SACdvD,OAAK,EACLrC,UAAU,eAEV,kBAAC,IAAM6C,OAAP,KACE,kBAAC,IAAMT,IAAP,KACE,kBAAC,IAAMsC,UAAP,CAAiBmB,aAAa,SAAS7F,UAAU,OAC/C,uBAAGA,UAAU,iBAEf,kBAAC,IAAM0E,UAAP,aACA,kBAAC,IAAMA,UAAP,cACA,kBAAC,IAAMA,UAAP,CAAiBmB,aAAa,UAA9B,WAGA,kBAAC,IAAMnB,UAAP,iBACA,kBAAC,IAAMA,UAAP,CAAiBmB,aAAa,UAA9B,gBAGA,kBAAC,IAAMnB,UAAP,CAAiBmB,aAAa,UAC5B,uBAAG7F,UAAU,qBAInB,kBAAC,IAAM4E,KAAP,KACE,kBAAC,IAAMxC,IAAP,KACE,kBAAC,IAAMf,IAAP,CAAWwE,aAAa,UACtB,kBAAC,IAAD,CACEhG,SAAS,2BACTG,UAAU,UACV8F,OAAO,WAGX,kBAAC,IAAMzE,IAAP,KACE,iDACA,kBAAC,IAAD,CAAMlB,KAAK,KAAK4F,OAAK,GAArB,6BAIF,kBAAC,IAAM1E,IAAP,KACE,yBAAKrB,UAAU,YACb,yBAAKA,UAAU,cACb,wCAEF,yBAAKA,UAAU,eACb,kBAAC,IAAKgG,MAAN,CAAYD,OAAK,GAAjB,iCAKJ,kBAAC,IAAD,CAAU5F,KAAK,MACb,kBAAC,IAAS8F,IAAV,CAAc5F,MAAM,SAASiC,MAAO,OAGxC,kBAAC,IAAMjB,IAAP,CAAWwE,aAAa,UACtB,kBAAC,IAAD,CAAMK,SAAO,EAAClI,KAAK,UAErB,kBAAC,IAAMqD,IAAP,KACE,kBAAC,IAAD,CAAMlB,KAAK,KAAK4F,OAAK,GAArB,cAGA,+CAEF,kBAAC,IAAM1E,IAAP,CAAWwE,aAAa,UAAxB,OACA,kBAAC,IAAMxE,IAAP,CAAWwE,aAAa,UACtB,kBAAC,IAAD,CACEM,QACE,kBAAC,IAASC,QAAV,CACElJ,KAAK,gBACLmJ,QAAQ,IAGZpC,SAAS,QACTqC,MACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAASxG,KAAV,CAAe7C,KAAK,OAApB,WACA,kBAAC,IAAS6C,KAAV,CAAe7C,KAAK,UAApB,iBACiB,KAEjB,kBAAC,IAAS6C,KAAV,CAAe7C,KAAK,kBAApB,uBAGA,kBAAC,IAASsJ,YAAV,MACA,kBAAC,IAASzG,KAAV,CAAe7C,KAAK,QACjB,IADH,4BAcpB,kBAAC,IAAKkF,IAAN,KACE,kBAAC,IAAKf,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CAAML,MAAM,iBACV,kBAAC,IAAD,CAAOnC,UAAU,cACf,kBAAC,IAAMoC,IAAP,KACE,kBAAC,IAAMf,IAAP,KACE,kBAAC,IAAD,CAAMoF,OAAO,KAAKzI,KAAK,SAASgC,UAAU,gBAE5C,kBAAC,IAAMqB,IAAP,sBACA,kBAAC,IAAMA,IAAP,CAAWrB,UAAU,cACnB,kBAAC,IAAD,CAAMI,cAAc,OAAO2F,OAAK,GAAhC,YAQV,kBAAC,IAAK1E,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CAAML,MAAM,YACV,kBAAC,IAAD,CAAOE,OAAK,GACV,kBAAC,IAAMD,IAAP,KACE,kBAAC,IAAMf,IAAP,uBACA,kBAAC,IAAMA,IAAP,CAAWwE,aAAa,SACtB,kBAAC,IAAD,CAAOxF,MAAM,WAAb,YAMV,kBAAC,IAAKgB,IAAN,CAAUyD,GAAI,EAAGtC,GAAI,GACnB,kBAAC,IAAD,CAAML,MAAM,WACV,kBAAC,IAAKyC,KAAN,KACE,wBAAI5E,UAAU,gCACZ,wBAAIA,UAAU,uBACZ,kBAAC,IAAKoC,IAAN,CAAUpC,UAAU,sBAClB,kBAAC,IAAKqB,IAAN,CAAUC,MAAI,GACZ,kBAAC,IAAD,CACEnB,KAAK,KACLH,UAAU,UACVH,SAAS,8BAGb,kBAAC,IAAKwB,IAAN,KACE,6BACE,uBAAGrB,UAAU,eAAeL,KAAK,KAAjC,gBAIF,kBAAC,IAAKqG,MAAN,CAAYD,OAAK,EAAC/F,UAAU,4BAA5B,4BAIF,kBAAC,IAAKqB,IAAN,CAAUC,MAAI,GACZ,kBAAC,IAAD,CACE6E,QACE,kBAAC,IAASC,QAAV,CACElJ,KAAK,gBACLmJ,QAAQ,IAGZpC,SAAS,QACTqC,MACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAASxG,KAAV,CAAe7C,KAAK,OAApB,WACA,kBAAC,IAAS6C,KAAV,CAAe7C,KAAK,UACjB,IADH,iBAEiB,KAEjB,kBAAC,IAAS6C,KAAV,CAAe7C,KAAK,kBACjB,IADH,uBAIA,kBAAC,IAASsJ,YAAV,MACA,kBAAC,IAASzG,KAAV,CAAe7C,KAAK,QACjB,IADH,4BAcpB,kBAAC,IAAKmE,IAAN,CAAUyD,GAAI,EAAGtC,GAAI,IACnB,kBAAC,IAAKJ,IAAN,KACE,kBAAC,IAAKf,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEC,OAAQ,EACRC,SAAU,EACVC,MAAM,MACNC,MAAM,eACN8D,MACE,kBAAC,IAAD,CACE3D,MAAO,CAAEC,OAAQ,QACjBQ,QAAS,CACPC,QAAS,GACTK,MAAO,EACPC,OAAQ,GAEV3I,KAAM,CACJiI,MAAO,CACLD,MAAO,gBAETH,QAAS,CAAC,CAAC,QAAS,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC5CjI,KAAM,QAERgJ,OAAQ,CACNN,MAAM,GAERiD,WAAY,CACVC,SAAU,GAEZrC,MAAO,CACLb,MAAM,GAERW,QAAS,CACPC,OAAQ,CACNnC,MAAO,SAAS0B,GACd,MAAO,MAIbP,KAAM,CACJC,EAAG,CACDC,QAAS,CACPC,OAAQ,GAEVC,MAAM,EACNC,KAAM,CACJC,OAAO,IAGXC,EAAG,CACDL,QAAS,CACPM,KAAM,EACNC,MAAO,GAETL,MAAM,IAGVrD,MAAO,CACLwG,QAAS,CAAC,iBAMpB,kBAAC,IAAKxF,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEC,OAAQ,EACRC,UAAW,EACXC,MAAM,MACNC,MAAM,eACN8D,MACE,kBAAC,IAAD,CACE3D,MAAO,CAAEC,OAAQ,QACjBQ,QAAS,CACPC,QAAS,GACTK,MAAO,EACPC,OAAQ,GAEV3I,KAAM,CACJiI,MAAO,CACLD,MAAO,gBAETH,QAAS,CAAC,CAAC,QAAS,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC5CjI,KAAM,QAERgJ,OAAQ,CACNN,MAAM,GAERiD,WAAY,CACVC,SAAU,GAEZrC,MAAO,CACLb,MAAM,GAERW,QAAS,CACPC,OAAQ,CACNnC,MAAO,SAAS0B,GACd,MAAO,MAIbP,KAAM,CACJC,EAAG,CACDC,QAAS,CACPC,OAAQ,GAEVC,MAAM,EACNC,KAAM,CACJC,OAAO,IAGXC,EAAG,CACDL,QAAS,CACPM,KAAM,EACNC,MAAO,GAETL,MAAM,IAGVrD,MAAO,CACLwG,QAAS,CAAC,iBAMpB,kBAAC,IAAKxF,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEC,OAAQ,EACRC,UAAW,EACXC,MAAM,MACNC,MAAM,eACN8D,MACE,kBAAC,IAAD,CACE3D,MAAO,CAAEC,OAAQ,QACjBQ,QAAS,CACPC,QAAS,GACTK,MAAO,EACPC,OAAQ,GAEV3I,KAAM,CACJiI,MAAO,CACLD,MAAO,gBAETH,QAAS,CAAC,CAAC,QAAS,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC5CjI,KAAM,QAERgJ,OAAQ,CACNN,MAAM,GAERiD,WAAY,CACVC,SAAU,GAEZrC,MAAO,CACLb,MAAM,GAERW,QAAS,CACPC,OAAQ,CACNnC,MAAO,SAAS0B,GACd,MAAO,MAIbP,KAAM,CACJC,EAAG,CACDC,QAAS,CACPC,OAAQ,GAEVC,MAAM,EACNC,KAAM,CACJC,OAAO,IAGXC,EAAG,CACDL,QAAS,CACPM,KAAM,EACNC,MAAO,GAETL,MAAM,IAGVrD,MAAO,CACLwG,QAAS,CAAC,iBAMpB,kBAAC,IAAKxF,IAAN,CAAUkB,GAAI,EAAGC,GAAI,GACnB,kBAAC,IAAD,CACEC,OAAQ,EACRC,SAAU,EACVC,MAAM,MACNC,MAAM,eACN8D,MACE,kBAAC,IAAD,CACE3D,MAAO,CAAEC,OAAQ,QACjBQ,QAAS,CACPC,QAAS,GACTK,MAAO,EACPC,OAAQ,GAEV3I,KAAM,CACJiI,MAAO,CACLD,MAAO,gBAETH,QAAS,CAAC,CAAC,QAAS,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC5CjI,KAAM,QAERgJ,OAAQ,CACNN,MAAM,GAERiD,WAAY,CACVC,SAAU,GAEZrC,MAAO,CACLb,MAAM,GAERW,QAAS,CACPC,OAAQ,CACNnC,MAAO,SAAS0B,GACd,MAAO,MAIbP,KAAM,CACJC,EAAG,CACDC,QAAS,CACPC,OAAQ,GAEVC,MAAM,EACNC,KAAM,CACJC,OAAO,IAGXC,EAAG,CACDL,QAAS,CACPM,KAAM,EACNC,MAAO,GAETL,MAAM,IAGVrD,MAAO,CACLwG,QAAS,CAAC,0B,GA5zBjBrF,IAAMsF,W,qFCvBVC,G,QAAAA,EAAMC,OAAO,CAC1BC,QAAS,yBACTC,aAAc,OACdC,aAAa,ICHFC,GAAQ,SAACrM,GACpB,OAAOsM,GAAKC,KAAK,cAAevM,IAGrBwM,GAAiB,WAC5B,OAAOF,GAAKG,IAAI,gBAAiB,CAC/BC,QAAS,CACPC,cAAeC,aAAaC,QAAQ,a,aCJhCR,I,aASAG,I,aASe/I,IAlBzB,SAAU4I,GAAMS,GAAhB,wEAEmB,OAFnB,kBAEyBC,aAAKC,GAAeF,EAAO9M,SAFpD,OAGI,OADII,EAFR,gBAGU6M,aAAIrJ,EAAqBxD,EAASsM,QAAQQ,gBAHpD,8BAKI,OALJ,mCAKUD,aAAIrJ,EAAA,OALd,sDASA,SAAU4I,KAAV,wEAEmB,OAFnB,kBAEyBO,aAAKC,IAF9B,OAGI,OADI5M,EAFR,gBAGU6M,aAAIrJ,EAA8BxD,EAASC,OAHrD,8BAKI,OALJ,mCAKU4M,aAAIrJ,EAAA,OALd,sDASe,SAAUH,KAAV,kEACb,OADa,SACP0J,aAAWjN,EAAoBmM,IADxB,OAEb,OAFa,SAEPc,aAAWjN,EAAgCsM,IAFpC,wCCrBR,IAAMY,GAAc,SAAC/L,GAC1B,OAAOiL,GAAKG,IAAI,kBAAmB,CACjCC,QAAS,CACPC,cAAeC,aAAaC,QAAQ,UAEtCxL,OAAQA,K,aCFF+L,I,aASeC,IATzB,SAAUD,GAAYN,GAAtB,wEAEmB,OAFnB,kBAEyBC,aAAKC,GAAqBF,EAAOzL,QAF1D,OAGI,OADIjB,EAFR,gBAGU6M,aAAIrJ,EAA4BxD,EAASC,OAHnD,8BAKI,OALJ,mCAKU4M,aAAIrJ,EAAA,OALd,sDASe,SAAUyJ,KAAV,kEACb,OADa,SACPF,aAAWjN,EAA4BkN,IADhC,wCCZR,IAAMhM,GAAe,SAAAC,GAAM,OAAIiL,GAAKG,IAAI,mBAAoB,CAC/DpL,OAAQA,EACRqL,QAAS,CACLC,cAAeC,aAAaC,QAAQ,aAI/BrL,GAAc,SAAAE,GAAE,OAAI4K,GAAKG,IAAI,oBAAsB/K,EAAI,CAChEgL,QAAS,CACLC,cAAeC,aAAaC,QAAQ,aAI/BhL,GAAoB,SAAAH,GAAE,OAAI4K,GAAKG,IAAI,oBAAsB/K,EAAK,UAAW,CAClFgL,QAAS,CACLC,cAAeC,aAAaC,QAAQ,a,aCZlCzL,I,aASAI,I,aASAK,I,aASeyL,IA3BzB,SAAUlM,GAAa0L,GAAvB,wEAEmB,OAFnB,kBAEyBC,aAAKC,GAAsBF,EAAOzL,QAF3D,OAGI,OADIjB,EAFR,gBAGU6M,aAAIrJ,EAA4BxD,EAASC,OAHnD,8BAKI,OALJ,mCAKU4M,aAAIrJ,EAAA,OALd,sDASA,SAAUpC,GAAYsL,GAAtB,wEAEqB,OAFrB,kBAE2BC,aAAKC,GAAqBF,EAAOpL,IAF5D,OAGM,OADItB,EAFV,gBAGY6M,aAAIrJ,EAA2BxD,EAASC,OAHpD,8BAKM,OALN,mCAKY4M,aAAIrJ,EAAA,OALhB,sDASA,SAAU/B,GAAkBiL,GAA5B,wEAEmB,OAFnB,kBAEyBC,aAAKC,GAA2BF,EAAOpL,IAFhE,OAGI,OADItB,EAFR,gBAGU6M,aAAIrJ,EAAiCxD,EAASC,OAHxD,8BAKI,OALJ,mCAKU4M,aAAIrJ,EAAA,OALd,sDASe,SAAU0J,KAAV,kEACb,OADa,SACPH,aAAWjN,EAA6BkB,IADjC,OAEb,OAFa,SAEP+L,aAAWjN,EAA+BsB,IAFnC,OAGb,OAHa,SAGP2L,aAAWjN,EAAmC2B,IAHvC,wCChCR,IAIM0L,GAAuB,uBAIvBC,GAAuB,uBCJvBC,GAAe,SAAA/L,GAAE,OAAI4K,GAAKG,IAFb,iBAEqC/K,EAAK,CAClEgL,QAAS,CACPC,cAAeC,aAAaC,QAAQ,aAI3Ba,GAA+B,SAAAhM,GAAE,OAAI4K,GAAKG,IAR7B,iBAQqD/K,EAAK,qBAAsB,CACxGgL,QAAS,CACPC,cAAeC,aAAaC,QAAQ,aCV3Bc,GAAuB,SAAAjM,GAAE,MAAK,CACzCzB,KAAMC,GACNwB,OAGWkM,GAAuB,SAAAvN,GAAI,MAAK,CAC3CJ,KFHkC,uBEIlCI,SAGWwN,GAAsB,SAAAtN,GAAK,MAAK,CAC3CN,KFPiC,sBEQjCM,UAGWuN,GAAqC,SAAApM,GAAE,MAAK,CACvDzB,KAAMC,GACNwB,OAGWqM,GAAqC,SAAA1N,GAAI,MAAK,CACzDJ,KFdkC,uBEelCI,SAGW2N,GAAoC,SAAAzN,GAAK,MAAK,CACzDN,KFlBiC,sBEmBjCM,U,aCxBQkN,I,aASAC,I,aASeO,IAlBzB,SAAUR,GAAaX,GAAvB,wEAEmB,OAFnB,kBAEyBC,aAAKC,GAAsBF,EAAOpL,IAF3D,OAGI,OADItB,EAFR,gBAGU6M,aAAIrJ,GAA6BxD,EAASC,OAHpD,8BAKI,OALJ,mCAKU4M,aAAIrJ,GAAA,OALd,sDASA,SAAU8J,GAA6BZ,GAAvC,wEAEmB,OAFnB,kBAEyBC,aAAKC,GAAsCF,EAAOpL,IAF3E,OAGI,OADItB,EAFR,gBAGU6M,aAAIrJ,GAA2CxD,EAASC,OAHlE,8BAKI,OALJ,mCAKU4M,aAAIrJ,GAAA,OALd,sDASe,SAAUqK,KAAV,kEACb,OADa,SACPd,aAAWjN,GAA4BuN,IADhC,OAEb,OAFa,SAEPN,aAAWjN,GAA4BwN,IAFhC,wC,iBCjBUQ,IAAV,SAAUA,KAAV,kEACb,OADa,SACPC,aAAK1K,IADE,OAEb,OAFa,SAEP0K,aAAKd,IAFE,OAGb,OAHa,SAGPc,aAAKb,IAHE,OAIb,OAJa,SAIPa,aAAKF,IAJE,wC,wBCHTG,GAAgBC,KAAU,CAC9B3K,gBAAkD,MAAjCkJ,aAAaC,QAAQ,SACtCyB,cAAc,EACd3K,KAAM,KACNpD,MAAO,OCJH6N,GAAgBC,KAAU,CAC9BE,SAAU,KACVD,cAAc,EACd/N,MAAO,OCHH6N,GAAgBC,KAAU,CAC9BG,UAAW,KACXF,cAAc,EACdhB,SAAU,KACV/M,MAAO,KACPkO,OAAQ,OCLJL,GAAgBC,KAAU,CAC9BJ,MAAO,KACPS,iBAAkB,KAClBnO,MAAO,KACP+N,cAAc,ICDDK,6BAAgB,CAC7BlL,KJGa,WAAoC,IAAnCf,EAAkC,uDAA1B0L,GAAetB,EAAW,uCAChD,OAAQA,EAAO7M,MACb,KAAKC,EACH,OAAOwC,EAAMkM,MAAM,CAAC,iBAAiB,GAAMA,MAAM,CAAC,SAAU,MAC9D,IpBbwB,eoBetB,OADAhC,aAAaiC,QAAQ,QAAS/B,EAAOzM,MAC9BqC,EACJkM,MAAM,CAAC,oBAAoB,GAC3BA,MAAM,CAAC,iBAAiB,GAC7B,IpBjBuB,coBkBrB,OAAOlM,EACJkM,MAAM,CAAC,SAAU9B,EAAOvM,OACxBqO,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,oBAAoB,GAChC,IpBpBoC,2BoBqBlC,OAAOlM,EAAMkM,MAAM,CAAC,QAAS9B,EAAOzM,MACtC,IpBrBmC,0BoBuBjC,OADAuM,aAAakC,WAAW,SACjBpM,EACJkM,MAAM,CAAC,QAAS,MAChBA,MAAM,CAAC,QAAS9B,EAAOvM,QACvBqO,MAAM,CAAC,mBAAmB,IAC/B,IpB1B0B,iBoB4BxB,OADAhC,aAAakC,WAAW,SACjBpM,EACJkM,MAAM,CAAC,QAAS,MAChBA,MAAM,CAAC,oBAAoB,GAC3BA,MAAM,CAAC,SAAU,MACtB,QACE,OAAOlM,II/BX2K,QHCa,WAAoC,IAAnC3K,EAAkC,uDAA1B0L,GAAetB,EAAW,uCAChD,OAAQA,EAAO7M,MACb,KAAKC,EACH,OAAOwC,EAAMkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,YAAa,MACpBA,MAAM,CAAC,SAAU,MAChC,InBdgC,uBmBe9B,OAAOlM,EAAMkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,YAAa9B,EAAOzM,MAC3BuO,MAAM,CAAC,SAAU,MAChC,InBjB+B,sBmBkB7B,OAAOlM,EAAMkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,YAAa,MACpBA,MAAM,CAAC,SAAU9B,EAAOvM,OACvC,QACE,OAAOmC,IGfX4K,SFEa,WAAoC,IAAnC5K,EAAkC,uDAA1B0L,GAAetB,EAAW,uCAChD,OAAQA,EAAO7M,MACb,KAAKC,EACH,OAAOwC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,YAAa,MACzB,IlBbmC,0BkBcjC,OAAOlM,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,YAAa9B,EAAOzM,MAChC,IlBjBkC,yBkBkBhC,OAAOqC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU9B,EAAOvM,OACxBqO,MAAM,CAAC,YAAa,MACzB,KAAK1O,EACH,OAAOwC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,aAAc,MAC1B,IlBhCiC,wBkBiC/B,OAAOlM,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,aAAc9B,EAAOzM,MACjC,IlBpCgC,uBkBqC9B,OAAOqC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU9B,EAAOvM,OACxBqO,MAAM,CAAC,aAAc,MAC1B,KAAK1O,EACH,OAAOwC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,aAAc,MAC1B,IlBvCuC,8BkBwCrC,OAAOlM,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,UAAW9B,EAAOzM,MAC9B,IlB3CsC,6BkB4CpC,OAAOqC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU9B,EAAOvM,OACxBqO,MAAM,CAAC,UAAW,MACvB,QACE,OAAOlM,IEjDXuL,MDAa,WAAoC,IAAnCvL,EAAkC,uDAA1B0L,GAAetB,EAAW,uCAChD,OAAQA,EAAO7M,MACb,KAAKC,GACH,OAAOwC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,SAAU,MACtB,IRZgC,uBQa9B,OAAOlM,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,SAAU9B,EAAOzM,MAC7B,KAAKH,GACH,OAAOwC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,oBAAqB,MACjC,IRlBgC,uBQmB9B,OAAOlM,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU,MACjBA,MAAM,CAAC,oBAAqB9B,EAAOzM,MACxC,IRtB+B,sBQuB7B,OAAOqC,EACJkM,MAAM,CAAC,iBAAiB,GACxBA,MAAM,CAAC,SAAU9B,EAAOvM,OACxBqO,MAAM,CAAC,oBAAqB,MACjC,QACE,OAAOlM,MElBEqM,GAZQ,WACrB,IAAMC,EAAiBC,eAEvB,OAAO,eACFC,sBACDP,0BAAgB,eAAKQ,EAAN,CAAgBvI,QAASwI,oBACxCC,+BAAoBC,0BAAgBN,KAHxC,CAKEO,QAASP,EAAeQ,IAAItB,MAIjBa,G,UCTTU,G,iLACM,IAAD,OACP,OAAOpL,KAAKd,MAAMG,gBAChB,kBAAC,IAAD,CAAUxB,GAAG,MAEb,kBAAC,KAAD,CACEwN,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GAER,IAAIC,EAAS,GAIb,OAHKD,EAAOH,QACVI,EAAOJ,MAAQ,YAEVI,GAETC,SAAU,SAACF,EAAD,GAA0C,EAA/BG,cAA+B,EAAhBC,UAClC,EAAK3M,MAAMK,QAAQ7D,aAAa,CAC9BoQ,SAAUL,EAAOH,MACjBC,SAAUE,EAAOF,YAGrBQ,OAAQ,gBACNN,EADM,EACNA,OACAC,EAFM,EAENA,OACAM,EAHM,EAGNA,QACAC,EAJM,EAINA,aACAC,EALM,EAKNA,WACAC,EANM,EAMNA,aANM,EAONC,aAPM,OASN,kBAAC,IAAD,CACET,SAAUQ,EACVE,SAAUJ,EACVK,OAAQJ,EACRT,OAAQA,EACRC,OAAQA,EACRM,QAASA,W,GAvCGtE,aA6DTrF,gBAdS,SAAAhE,GACtB,MAAO,CACLgB,gBAAiBhB,EAAMiE,QAAQlD,KAAKC,gBACpCkD,QAASlE,EAAMkE,QAAQC,8BAIA,SAAAC,GACzB,MAAO,CACLlD,QAASmD,6BAAmB,eAAKnD,GAAgBkD,GACjDA,cAIWJ,CAA6C+I,IClEtDmB,G,6LAGEvM,KAAKd,MAAMK,QAAQjD,W,+BAInB,OACE,kBAAC,IAAD,CAAUuB,GAAG,U,GARE6J,aAoBVrF,eAAQ,MAPI,SAAAI,GACvB,MAAO,CACLlD,QAASmD,6BAAmB,eAAKnD,GAAgBkD,GACjDA,cAISJ,CAAkCkK,IClB3CC,G,2MACJvN,kBAAoB,WAClB,EAAKC,MAAMK,QAAQxC,gB,EAGrByC,sBAAwB,SAAAC,GACtB,OAAOA,EAAU0K,WAAa,EAAKjL,MAAMiL,W,EAG3CsC,SAAW,SAAAxD,GACT,EAAK/J,MAAMwN,QAAQC,KAAK,aAAe1D,EAAS5L,K,wEAGxC,IAAD,OACH8M,EAAYnK,KAAKd,MAAMiL,UAC3B,OACE,kBAAC,GAAD,KACE,kBAAC,IAAKrH,QAAN,CAAcC,MAAM,sBAClB,kBAAC,IAAKC,IAAN,CAAUC,OAAK,EAACoD,MAAI,GAClB,kBAAC,IAAKpE,IAAN,CAAUiB,MAAO,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmC,YAAU,EACViB,qBAAmB,EACnBC,YAAU,EACVC,cAAc,SACdvD,OAAK,EACLrC,UAAU,eAEV,kBAAC,IAAM6C,OAAP,KACE,kBAAC,IAAMT,IAAP,KACE,kBAAC,IAAMsC,UAAP,CAAiBmB,aAAa,SAAS7F,UAAU,OAC/C,uBAAGA,UAAU,iBAEf,kBAAC,IAAM0E,UAAP,aACA,kBAAC,IAAMA,UAAP,cACA,kBAAC,IAAMA,UAAP,CAAiBmB,aAAa,UAC5B,uBAAG7F,UAAU,qBAInB,kBAAC,IAAM4E,KAAP,KACG2E,GACCA,EAAU/I,KAAI,SAAA6H,GAAQ,OACpB,kBAAC,IAAMjG,IAAP,CAAW4J,IAAK3D,EAAS5L,IACvB,kBAAC,IAAM4E,IAAP,CAAWwE,aAAa,UACtB,kBAAC,IAAD,CACEhG,SAAS,2BACTG,UAAU,UACV8F,OAAO,SAGX,kBAAC,IAAMzE,IAAP,KACE,6BAAMgH,EAASrK,OAEjB,kBAAC,IAAMqD,IAAP,KACE,6BAAMgH,EAAS4D,QAEjB,kBAAC,IAAM5K,IAAP,KACE,kBAAC,IAAD,CACEhB,MAAM,UACNH,SAAO,EACPgM,QAAS,kBAAM,EAAKL,SAASxD,KAH/B,iC,GA3DDvB,aA0FZrF,gBAVS,SAAAhE,GAAK,MAAK,CAChC8L,UAAW9L,EAAMiE,QAAQ2G,SAASkB,UAClC5H,QAASlE,EAAMkE,QAAQC,8BAGE,SAAAC,GAAQ,MAAK,CACtClD,QAASmD,6BAAmB,eAAKnD,GAAoBkD,GACrDA,cAGaJ,CAA6CmK,I,UCxFtD3I,GAAU,CACd,CACEd,MAAO,mCACPgK,UAAW,OACXH,IAAK,QAEP,CACE7J,MAAO,qBACPgK,UAAW,WACXH,IAAK,YAEP,CACE7J,MAAO,sBACPgK,UAAW,aACXH,IAAK,cAEP,CACE7J,MAAO,mBACPgK,UAAW,WACXH,IAAK,YAEP,CACE7J,MAAO,wCACPgK,UAAW,YACXH,IAAK,aAEP,CACE7J,MAAO,2BACPgK,UAAW,YACXH,IAAK,aAEP,CACE7J,MAAO,kCACPgK,UAAW,YACXH,IAAK,aAEP,CACE7J,MAAO,kDACPgK,UAAW,YACXH,IAAK,cAIHI,GAAyB,SAAAhE,GAAO,MAAK,CACzCpK,KAAMoK,EAAQpK,KACdqO,SAAUjE,EAAQiE,SAASrO,KAC3BsO,WAAYlE,EAAQkE,WAAWtO,KAC/BuO,SAAUnE,EAAQmE,SAASvO,KAC3BwO,UAAWpE,EAAQoE,UACnBC,UAAW,EAAIrE,EAAQoE,UAAYpE,EAAQiE,SAASK,SACpDC,UAAWvE,EAAQuE,UACnBC,UAAWxE,EAAQwE,YAGfC,G,2MACJxO,kBAAoB,WAClB,EAAKC,MAAMK,QAAQ/C,uB,EAGrBgD,sBAAwB,SAAAC,GACtB,OAAOA,EAAUyK,UAAY,EAAKhL,MAAMgL,U,wEAIxC,IAAIwD,EACF1N,KAAKd,MAAMgL,UAAYlK,KAAKd,MAAMgL,SAAS9I,IAAI4L,IACjD,OACE,kBAAC,GAAD,KACE,kBAAC,IAAKlK,QAAN,CAAcC,MAAM,qBAClB,kBAAC,IAAKC,IAAN,CAAUC,OAAK,EAACoD,MAAI,GAClB,kBAAC,IAAKpE,IAAN,CAAUiB,MAAO,IACf,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAOwK,WAAYA,EAAY7J,QAASA,c,GAlB9B6D,aA0CXrF,gBAdS,SAAAhE,GACtB,MAAO,CACL6L,SAAU7L,EAAMiE,QAAQ0G,QAAQkB,SAChC3H,QAASlE,EAAMkE,QAAQC,8BAIA,SAAAC,GACzB,MAAO,CACLlD,QAASmD,6BAAmB,eAAKnD,GAAmBkD,GACpDA,cAIWJ,CAA6CoL,I,8BCvGtDE,GAAuB,SAAA/D,GAAK,MAAK,CACrCvM,GAAIuM,EAAMvM,GACVuQ,SAAUhE,EAAMgE,SAChBC,cAAejE,EAAMiE,cACrBC,iBAAkBlE,EAAMkE,iBACxBC,SAAUnE,EAAMmE,SAAWnE,EAAMmE,SAASnP,KAAO,KACjDoP,KAAMpE,EAAMoE,KAAOpE,EAAMoE,KAAKpP,KAAO,KACrCqP,UAAWrE,EAAMqE,UAAYrE,EAAMqE,UAAUrP,KAAO,KACpDsP,YAAatE,EAAMsE,YAActE,EAAMsE,YAAYtP,KAAO,OAGvCuP,G,2MACnB3O,sBAAwB,SAAAC,GACtB,OAAOA,GAAa,EAAKP,O,EAG3B2E,QAAU,CACR,CACEd,MAAO,gCACPgK,UAAW,KACXH,IAAK,MAEP,CACE7J,MAAO,iCACPgK,UAAW,WACXH,IAAK,YAEP,CACE7J,MAAO,0CACPgK,UAAW,gBACXH,IAAK,iBAEP,CACE7J,MAAO,gDACPgK,UAAW,mBACXH,IAAK,oBAEP,CACE7J,MAAO,YACPgK,UAAW,WACXH,IAAK,YAEP,CACE7J,MAAO,OACPgK,UAAW,OACXH,IAAK,QAEP,CACE7J,MAAO,aACPgK,UAAW,YACXH,IAAK,aAEP,CACE7J,MAAO,eACPgK,UAAW,cACXH,IAAK,eAEP,CACEA,IAAK,YACLwB,MAAO,QACPlL,MAAO,IACP6I,OAAQ,SAACsC,EAAMC,GAAP,OAAkB,kBAAC,KAAD,CAAQ1S,KAAK,UAAUkR,QAAS,kBAAM,EAAKyB,UAAUD,KAArD,oB,EAI9BC,UAAY,SAAAD,GACV,EAAKpP,MAAMwN,QAAQC,KAAK,UAAY2B,EAAOjR,K,EAG7C0O,OAAS,WACP,IAAI2B,EAAa,EAAKxO,MAAMwO,WACxB,EAAKxO,MAAMwO,WAAWtM,IAAIuM,IAC1B,KACJ,OACE,kBAAC,KAAD,CACED,WAAYA,EACZ7J,QAAS,EAAKA,QACd2K,OAAQ,CAAE/J,EAAG,KAAMN,EAAG,MACtBsK,OAAQ,SAAAC,GAAO,OAAIA,EAAQrR,O,6BAnEKqK,aCJlCiH,G,2MACJ1P,kBAAoB,WAClB,EAAKC,MAAMK,QAAQpC,YAAY,EAAK+B,MAAM0P,MAAM5R,OAAOK,IACvD,EAAK6B,MAAMK,QAAQ/B,kBAAkB,EAAK0B,MAAM0P,MAAM5R,OAAOK,K,EAG/DmC,sBAAwB,SAAAC,GACtB,OAAOA,EAAUwJ,WAAa,EAAK/J,MAAM+J,U,EAG3C8C,OAAS,WACP,IAAI9C,EAAW,EAAK/J,MAAM+J,SAASA,SAC/BmB,EAAS,EAAKlL,MAAM+J,SAASmB,OACjC,OACE,kBAAC,GAAD,KACE,kBAAC,IAAKtH,QAAN,CAAcC,MAAM,IAClB,kBAAC,IAAKC,IAAN,CAAUC,OAAK,EAACoD,MAAI,GAClB,kBAAC,IAAKpE,IAAN,CAAUiB,MAAO,IACf,kBAAC,KAAD,KACG+F,GACC,kBAAC,KAAD,CAAclG,MAAM,iCAClB,kBAAC,KAAapC,KAAd,CAAmB6C,MAAM,kBACtByF,EAASrK,MAEZ,kBAAC,KAAa+B,KAAd,CAAmB6C,MAAM,6BACtByF,EAAS4D,OAEZ,kBAAC,KAAalM,KAAd,CAAmB6C,MAAM,sBAAzB,UAGA,kBAAC,KAAa7C,KAAd,CAAmB6C,MAAM,0BACtByF,EAAS4F,aAMpB,kBAAC,IAAK5M,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,IAE/B,kBAAC,IAAKnB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC5BgH,GAAU,kBAAC,IAAD,CACT/G,OAAQ,EACRC,SAAU,EACVC,MAAO6G,EAAO0E,OACdtL,MAAM,+CAGV,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAC5BgH,GAAU,kBAAC,IAAD,CACT/G,OAAQ,EACRC,SAAU,EACVC,MAAO6G,EAAOlK,QAAO,SAAC6O,EAAKnF,GAAN,OAAgBmF,EAAMnF,EAAMkE,mBAAkB,GACnEtK,MAAM,uDAGV,kBAAC,IAAKvB,IAAN,CAAUiB,MAAO,EAAGC,GAAI,EAAGC,GAAI,KAEjC,kBAAC,IAAKJ,IAAN,KACE,kBAAC,IAAKf,IAAN,CAAUiB,MAAO,IACf,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAYwK,WAAY,EAAKxO,MAAM+J,SAASmB,OAAQsC,QAAS,EAAKxN,MAAMwN,gB,6BA5DvDhF,aAgFlBrF,gBAVS,SAAAhE,GAAK,MAAK,CAChC4K,SAAU5K,EAAMiE,QAAQ2G,SACxB1G,QAASlE,EAAMkE,QAAQC,8BAGE,SAAAC,GAAQ,MAAK,CACtClD,QAASmD,6BAAmB,eAAKnD,GAAoBkD,GACrDA,cAGaJ,CAA6CsM,ICjFtD9K,GAAU,CACd,CACEd,MAAO,6BACPgK,UAAW,KACXH,IAAK,MAEP,CACE7J,MAAO,wBACPgK,UAAW,cACXH,IAAK,eAEP,CACE7J,MAAO,2BACPgK,UAAW,QACXH,IAAK,SAEP,CACE7J,MAAO,iCACPgK,UAAW,WACXH,IAAK,YAEP,CACE7J,MAAO,kCACPgK,UAAW,cACXH,IAAK,eAEP,CACE7J,MAAO,aACPgK,UAAW,OACXH,IAAK,SAIHoC,GAAkB,SAAAhT,GAAI,MAAK,CAC/BqB,GAAIrB,EAAKqB,GACT4R,YAAajT,EAAKkT,KAClBtR,MAAO5B,EAAK4B,MACZuR,SAAUnT,EAAKmT,SACfC,YAAapT,EAAKJ,KAClBiG,KAAM7F,EAAKqT,UAGPC,G,2MAEJ9P,sBAAwB,SAAAC,GAAS,OAAI,EAAKP,MAAM0K,QAAUnK,EAAUmK,O,EAEpE3K,kBAAoB,WAClB,EAAKC,MAAMK,QAAQ+J,qBAAqB,EAAKpK,MAAM0P,MAAM5R,OAAOK,IAChE,EAAK6B,MAAMK,QAAQkK,mCAAmC,EAAKvK,MAAM0P,MAAM5R,OAAOK,K,EAGhF0O,OAAS,WACP,IAAI2B,EAAa,EAAKxO,MAAM0K,MAAMS,iBAAmB,EAAKnL,MAAM0K,MAAMS,iBAAiBjJ,IAAI4N,IAAmB,KAC1GpF,EAAQ,EAAK1K,MAAM0K,MAAMA,MAC7B,OACE,kBAAC,GAAD,KACE,kBAAC,IAAK9G,QAAN,KACE,kBAAC,IAAKE,IAAN,KACE,kBAAC,IAAKf,IAAN,KACA,kBAAC,KAAD,KACK2H,GACC,kBAAC,KAAD,CAAc7G,MAAM,sDAClB,kBAAC,KAAapC,KAAd,CAAmB6C,MAAM,iCACtBoG,EAAMvM,IAET,kBAAC,KAAasD,KAAd,CAAmB6C,MAAM,4BACtBoG,EAAMgE,UAET,kBAAC,KAAajN,KAAd,CAAmB6C,MAAM,6BACtBoG,EAAMsF,MAET,kBAAC,KAAavO,KAAd,CAAmB6C,MAAM,2CACtBoG,EAAMiE,eAET,kBAAC,KAAalN,KAAd,CAAmB6C,MAAM,iDACtBoG,EAAMkE,kBAET,kBAAC,KAAanN,KAAd,CAAmB6C,MAAM,wBAAzB,UACMoG,EAAM2F,SADZ,UAGA,kBAAC,KAAa5O,KAAd,CAAmB6C,MAAM,sBACtBoG,EAAMlD,QAET,kBAAC,KAAa/F,KAAd,CAAmB6C,MAAM,aACtBoG,EAAMmE,SAAWnE,EAAMmE,SAASnP,KAAO,MAE1C,kBAAC,KAAa+B,KAAd,CAAmB6C,MAAM,QACtBoG,EAAMoE,KAAOpE,EAAMoE,KAAKpP,KAAO,MAElC,kBAAC,KAAa+B,KAAd,CAAmB6C,MAAM,cACtBoG,EAAMqE,UAAYrE,EAAMqE,UAAUrP,KAAO,MAE5C,kBAAC,KAAa+B,KAAd,CAAmB6C,MAAM,gBACtBoG,EAAMsE,YAActE,EAAMsE,YAAYtP,KAAO,UAO1D,kBAAC,IAAKoE,IAAN,KACE,kBAAC,IAAKf,IAAN,CAAUiB,MAAO,IACf,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOwK,WAAYA,EAAY7J,QAASA,W,6BA7D1B6D,aAgFfrF,gBATS,SAAAhE,GAAK,MAAK,CAChCuL,MAAOvL,EAAMiE,QAAQsH,UAGI,SAAAnH,GAAQ,MAAK,CACtClD,QAASmD,6BAAmB,eAAKnD,GAAWkD,GAC5CA,cAGaJ,CAA6CiN,IC7F7CE,G,iLAlBX,OACE,gBAAC,IAAD,CAAUrQ,MAAOA,IACb,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOsQ,OAAK,EAACC,KAAK,IAAIC,UAAWhN,KACjC,gBAAC,IAAD,CAAO8M,OAAK,EAACC,KAAK,SAASC,UAAWvE,KACtC,gBAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,UAAUC,UAAWpD,KACvC,gBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,YAAYC,UAAWnD,KACzC,gBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,gBAAgBC,UAAWhB,KAC7C,gBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,WAAWC,UAAWlC,KACxC,gBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,aAAaC,UAAWL,Y,GAZtClN,a,0BCVlBwN,IAAS7D,OACP,kBAAC,KAAD,CAAc8D,OAAO,MACjB,kBAAC,GAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.cfb0b691.chunk.js","sourcesContent":["export const AUTH_REQUEST = \"AUTH_REQUEST\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";\r\nexport const GET_CURRENT_USER_REQUEST = \"GET_CURRENT_USER_REQUEST\";\r\nexport const GET_CURRENT_USER_SUCCESS = \"GET_CURRENT_USER_SUCCESS\";\r\nexport const GET_CURRENT_USER_FAILED = \"GET_CURRENT_USER_FAILED\";\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";","import * as types from \"../constants/auth\";\r\n\r\nexport const loginRequest = payload => ({\r\n  type: types.AUTH_REQUEST,\r\n  payload\r\n});\r\n\r\nexport const loginSuccess = response => ({\r\n  type: types.AUTH_SUCCESS,\r\n  data: response\r\n});\r\n\r\nexport const loginError = response => ({\r\n  type: types.AUTH_FAILED,\r\n  error: response\r\n});\r\n\r\nexport const getCurrentUserRequest = () => ({\r\n  type: types.GET_CURRENT_USER_REQUEST\r\n});\r\n\r\nexport const getCurrentUserSuccess = response => ({\r\n  type: types.GET_CURRENT_USER_SUCCESS,\r\n  data: response\r\n});\r\n\r\nexport const getCurrentUserFailed = response => ({\r\n  type: types.GET_CURRENT_USER_FAILED,\r\n  error: response\r\n});\r\n\r\nexport const logout = () => ({ type: types.LOGOUT_REQUEST });\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAILED = \"PRODUCT_LIST_FAILED\"","import * as types from \"./../constants/product\";\r\n\r\nexport const fetchProductRequest = param => ({\r\n  type: types.PRODUCT_LIST_REQUEST,\r\n  param\r\n});\r\n\r\nexport const fetchProductSuccess = data => ({\r\n  type: types.PRODUCT_LIST_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const fetchProductFailed = error => ({\r\n  type: types.PRODUCT_LIST_FAILED,\r\n  error\r\n});\r\n","export const CUSTOMER_LIST_REQUEST = \"CUSTOMER_LIST_REQUEST\"\r\nexport const CUSTOMER_LIST_SUCCESS = \"CUSTOMER_LIST_SUCCESS\"\r\nexport const CUSTOMER_LIST_FAILED = \"CUSTOMER_LIST_FAILED\"\r\n\r\nexport const CUSTOMER_DETAIL_REQUEST = \"CUSTOMER_DETAIL_REQUEST\"\r\nexport const CUSTOMER_DETAIL_SUCCESS = \"CUSTOMER_DETAIL_SUCCESS\"\r\nexport const CUSTOMER_DETAIL_FAILED = \"CUSTOMER_DETAIL_FAILED\"\r\n\r\nexport const CUSTOMER_ORDER_LIST_REQUEST = \"CUSTOMER_ORDER_LIST_REQUEST\"\r\nexport const CUSTOMER_ORDER_LIST_SUCCESS = \"CUSTOMER_ORDER_LIST_SUCCESS\"\r\nexport const CUSTOMER_ORDER_LIST_FAILED = \"CUSTOMER_ORDER_LIST_FAILED\"","import * as types from \"./../constants/customer\";\r\n\r\nexport const getCustomers = params => ({\r\n  type: types.CUSTOMER_LIST_REQUEST,\r\n  params\r\n});\r\n\r\nexport const getCustomersSuccess = data => ({\r\n  type: types.CUSTOMER_LIST_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getCustomersFailed = error => ({\r\n  type: types.CUSTOMER_LIST_FAILED,\r\n  error\r\n});\r\n\r\nexport const getCustomer = idCustomer => ({\r\n  type: types.CUSTOMER_DETAIL_REQUEST,\r\n  id: idCustomer\r\n});\r\n\r\nexport const getCustomerSuccess = data => ({\r\n  type: types.CUSTOMER_DETAIL_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getCustomerFailed = error => ({\r\n  type: types.CUSTOMER_DETAIL_FAILED,\r\n  error\r\n});\r\n\r\nexport const getCustomerOrders = idCustomer => ({\r\n  type: types.CUSTOMER_ORDER_LIST_REQUEST,\r\n  id: idCustomer\r\n});\r\n\r\nexport const getCustomerOrdersSuccess = data => ({\r\n  type: types.CUSTOMER_ORDER_LIST_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getCustomerOrdersFailed = error => ({\r\n  type: types.CUSTOMER_ORDER_LIST_FAILED,\r\n  error\r\n});\r\n","import * as React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport update from \"react-addons-update\";\r\nimport {\r\n  Site,\r\n  Nav,\r\n  Grid,\r\n  List,\r\n  Button,\r\n  RouterContextProvider\r\n} from \"tabler-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../../actions\";\r\n\r\nconst navBarItems = [\r\n  {\r\n    value: \"Home\",\r\n    to: \"/\",\r\n    icon: \"home\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true\r\n  },\r\n  {\r\n    value: \"Interface\",\r\n    icon: \"box\",\r\n    subItems: [\r\n      {\r\n        value: \"Cards Design\",\r\n        to: \"/cards\",\r\n        LinkComponent: withRouter(NavLink)\r\n      },\r\n      { value: \"Charts\", to: \"/charts\", LinkComponent: withRouter(NavLink) },\r\n      {\r\n        value: \"Pricing Cards\",\r\n        to: \"/pricing-cards\",\r\n        LinkComponent: withRouter(NavLink)\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    value: \"Components\",\r\n    icon: \"calendar\",\r\n    subItems: [\r\n      { value: \"Maps\", to: \"/maps\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Icons\", to: \"/icons\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Store\", to: \"/store\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Blog\", to: \"/blog\", LinkComponent: withRouter(NavLink) }\r\n    ]\r\n  },\r\n  {\r\n    value: \"Pages\",\r\n    icon: \"file\",\r\n    subItems: [\r\n      { value: \"Customer\", to: \"/customer\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Login\", to: \"/login\", LinkComponent: withRouter(NavLink) },\r\n      {\r\n        value: \"Register\",\r\n        to: \"/register\",\r\n        LinkComponent: withRouter(NavLink)\r\n      },\r\n      {\r\n        value: \"Forgot password\",\r\n        to: \"/forgot-password\",\r\n        LinkComponent: withRouter(NavLink)\r\n      },\r\n      { value: \"Product\", to: \"/product\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"401 error\", to: \"/401\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"403 error\", to: \"/403\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"404 error\", to: \"/404\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"500 error\", to: \"/500\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"503 error\", to: \"/503\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Email\", to: \"/email\", LinkComponent: withRouter(NavLink) },\r\n      {\r\n        value: \"Empty page\",\r\n        to: \"/empty-page\",\r\n        LinkComponent: withRouter(NavLink)\r\n      },\r\n      { value: \"RTL\", to: \"/rtl\", LinkComponent: withRouter(NavLink) }\r\n    ]\r\n  },\r\n  {\r\n    value: \"Forms\",\r\n    to: \"/form-elements\",\r\n    icon: \"check-square\",\r\n    LinkComponent: withRouter(NavLink)\r\n  },\r\n  {\r\n    value: \"Gallery\",\r\n    to: \"/gallery\",\r\n    icon: \"image\",\r\n    LinkComponent: withRouter(NavLink)\r\n  },\r\n  {\r\n    icon: \"file-text\",\r\n    value: \"Documentation\",\r\n    to:\r\n      process.env.NODE_ENV === \"production\"\r\n        ? \"https://tabler.github.io/tabler-react/documentation\"\r\n        : \"/documentation\"\r\n  }\r\n];\r\n\r\nclass SiteWrapper extends React.Component {\r\n  state = {\r\n    notificationsObjects: [\r\n      {\r\n        unread: true,\r\n        avatarURL: \"demo/faces/male/41.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            <strong>Nathan</strong> pushed new commit: Fix page load performance\r\n            issue.\r\n          </React.Fragment>\r\n        ),\r\n        time: \"10 minutes ago\"\r\n      },\r\n      {\r\n        unread: true,\r\n        avatarURL: \"demo/faces/female/1.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            <strong>Alice</strong> started new task: Tabler UI design.\r\n          </React.Fragment>\r\n        ),\r\n        time: \"1 hour ago\"\r\n      },\r\n      {\r\n        unread: false,\r\n        avatarURL: \"demo/faces/female/18.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            <strong>Rose</strong> deployed new version of NodeJS REST Api // V3\r\n          </React.Fragment>\r\n        ),\r\n        time: \"2 hours ago\"\r\n      }\r\n    ],\r\n    accountDropdownProps: {\r\n      avatarURL: \"./demo/faces/female/25.jpg\",\r\n      name: \"Jane Pearson\",\r\n      description: \"Administrator\",\r\n      options: [\r\n        { icon: \"user\", value: \"Profile\" },\r\n        { icon: \"settings\", value: \"Settings\" },\r\n        { icon: \"mail\", value: \"Inbox\", badge: \"6\" },\r\n        { icon: \"send\", value: \"Message\" },\r\n        { isDivider: true },\r\n        { icon: \"help-circle\", value: \"Need help?\" },\r\n        { icon: \"log-out\", value: \"Sign out\", to: \"/logout\" }\r\n      ]\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (\r\n      this.props.store.auth.isAuthenticated &&\r\n      this.props.store.auth.user == null\r\n    ) {\r\n      this.props.actions.getCurrentUserRequest();\r\n    }\r\n  };\r\n\r\n  shouldComponentUpdate = (nextProps, nextState) => {\r\n    return nextProps.store != this.props.store;\r\n  };\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    if (nextProps.store.auth.user != null)\r\n      this.setState({\r\n        accountDropdownProps: update(this.state.accountDropdownProps, {\r\n          //avatarURL: {$set: nextProps.auth.user.imageUrl.replace(/\\\\/g, '/')},\r\n          name: { $set: nextProps.store.auth.user.name },\r\n          description: { $set: nextProps.store.auth.user.role }\r\n        })\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const notificationsObjects = this.state.notificationsObjects || [];\r\n    const unreadCount = this.state.notificationsObjects.reduce(\r\n      (a, v) => a || v.unread,\r\n      false\r\n    );\r\n\r\n    return (\r\n      <Site.Wrapper\r\n        headerProps={{\r\n          href: \"/\",\r\n          alt: \"Crystal Holiday\",\r\n          imageURL: \"https://images.pexels.com/photos/346885/pexels-photo-346885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\r\n          navItems: (\r\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\r\n              <Button\r\n                href=\"https://github.com/tabler/tabler-react\"\r\n                target=\"_blank\"\r\n                outline\r\n                size=\"sm\"\r\n                RootComponent=\"a\"\r\n                color=\"primary\"\r\n              >\r\n                Source code\r\n              </Button>\r\n            </Nav.Item>\r\n          ),\r\n          notificationsTray: {\r\n            notificationsObjects,\r\n            markAllAsRead: () =>\r\n              this.setState(\r\n                () => ({\r\n                  notificationsObjects: this.state.notificationsObjects.map(\r\n                    v => ({ ...v, unread: false })\r\n                  )\r\n                }),\r\n                () =>\r\n                  setTimeout(\r\n                    () =>\r\n                      this.setState({\r\n                        notificationsObjects: this.state.notificationsObjects.map(\r\n                          v => ({ ...v, unread: true })\r\n                        )\r\n                      }),\r\n                    5000\r\n                  )\r\n              ),\r\n            unread: unreadCount\r\n          },\r\n          accountDropdown: this.state.accountDropdownProps\r\n        }}\r\n        navProps={{ itemsObjects: navBarItems }}\r\n        routerContextComponentType={withRouter(RouterContextProvider)}\r\n        footerProps={{\r\n          links: [\r\n            <a href=\"#\">First Link</a>,\r\n            <a href=\"#\">Second Link</a>,\r\n            <a href=\"#\">Third Link</a>,\r\n            <a href=\"#\">Fourth Link</a>,\r\n            <a href=\"#\">Five Link</a>,\r\n            <a href=\"#\">Sixth Link</a>,\r\n            <a href=\"#\">Seventh Link</a>,\r\n            <a href=\"#\">Eigth Link</a>\r\n          ],\r\n          note:\r\n            \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\r\n          copyright: (\r\n            <React.Fragment>\r\n              Copyright © 2019\r\n              <a href=\".\"> Tabler-react</a>. Theme by\r\n              <a\r\n                href=\"https://codecalm.net\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                codecalm.net\r\n              </a>{\" \"}\r\n              All rights reserved.\r\n            </React.Fragment>\r\n          ),\r\n          nav: (\r\n            <React.Fragment>\r\n              <Grid.Col auto={true}>\r\n                <List className=\"list-inline list-inline-dots mb-0\">\r\n                  <List.Item className=\"list-inline-item\">\r\n                    <a href=\"./docs/index.html\">Documentation</a>\r\n                  </List.Item>\r\n                  <List.Item className=\"list-inline-item\">\r\n                    <a href=\"./faq.html\">FAQ</a>\r\n                  </List.Item>\r\n                </List>\r\n              </Grid.Col>\r\n              <Grid.Col auto={true}>\r\n                <Button\r\n                  href=\"https://github.com/tabler/tabler-react\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  color=\"primary\"\r\n                  RootComponent=\"a\"\r\n                >\r\n                  Source code\r\n                </Button>\r\n              </Grid.Col>\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Site.Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    store: state.default,\r\n    routing: state.routing.locationBeforeTransitions\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators({ ...actions.auth }, dispatch),\r\n    dispatch\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SiteWrapper);\r\n","import React, { Component } from 'react'\r\n\r\nimport {\r\n  Page,\r\n  Avatar,\r\n  Icon,\r\n  Grid,\r\n  Card,\r\n  Text,\r\n  Table,\r\n  Alert,\r\n  Progress,\r\n  colors,\r\n  Dropdown,\r\n  Button,\r\n  StampCard,\r\n  StatsCard,\r\n  ProgressCard,\r\n  Badge,\r\n} from \"tabler-react\";\r\n\r\nimport C3Chart from \"react-c3js\";\r\n\r\nimport SiteWrapper from \"../components/shared/SiteWrapper\";\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inhouseData: []\r\n    };\r\n  }\r\n\r\n  updateInHouseData = (data) => {\r\n    this.setState({\r\n      inhouseData: data\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content title=\"Dashboard\">\r\n          <Grid.Row cards={true}>\r\n            <Grid.Col width={6} sm={4} lg={2}>\r\n              <StatsCard layout={1} movement={6} total=\"43\" label=\"New Tickets\" />\r\n            </Grid.Col>\r\n            <Grid.Col width={6} sm={4} lg={2}>\r\n              <StatsCard\r\n                layout={1}\r\n                movement={-3}\r\n                total=\"17\"\r\n                label=\"Closed Today\"\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col width={6} sm={4} lg={2}>\r\n              <StatsCard layout={1} movement={9} total=\"7\" label=\"New Replies\" />\r\n            </Grid.Col>\r\n            <Grid.Col width={6} sm={4} lg={2}>\r\n              <StatsCard\r\n                layout={1}\r\n                movement={3}\r\n                total=\"27.3k\"\r\n                label=\"Followers\"\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col width={6} sm={4} lg={2}>\r\n              <StatsCard\r\n                layout={1}\r\n                movement={-2}\r\n                total=\"$95\"\r\n                label=\"Daily earnings\"\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col width={6} sm={4} lg={2}>\r\n              <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\r\n            </Grid.Col>\r\n            <Grid.Col lg={6}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>Development Activity</Card.Title>\r\n                </Card.Header>\r\n                <C3Chart\r\n                  style={{ height: \"10rem\" }}\r\n                  data={{\r\n                    columns: [\r\n                      // each columns data\r\n                      [\r\n                        \"data1\",\r\n                        0,\r\n                        5,\r\n                        1,\r\n                        2,\r\n                        7,\r\n                        5,\r\n                        6,\r\n                        8,\r\n                        24,\r\n                        7,\r\n                        12,\r\n                        5,\r\n                        6,\r\n                        3,\r\n                        2,\r\n                        2,\r\n                        6,\r\n                        30,\r\n                        10,\r\n                        10,\r\n                        15,\r\n                        14,\r\n                        47,\r\n                        65,\r\n                        55,\r\n                      ],\r\n                    ],\r\n                    type: \"area\", // default type of chart\r\n                    groups: [[\"data1\", \"data2\", \"data3\"]],\r\n                    colors: {\r\n                      data1: colors[\"blue\"],\r\n                    },\r\n                    names: {\r\n                      // name of each serie\r\n                      data1: \"Purchases\",\r\n                    },\r\n                  }}\r\n                  axis={{\r\n                    y: {\r\n                      padding: {\r\n                        bottom: 0,\r\n                      },\r\n                      show: false,\r\n                      tick: {\r\n                        outer: false,\r\n                      },\r\n                    },\r\n                    x: {\r\n                      padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                      },\r\n                      show: false,\r\n                    },\r\n                  }}\r\n                  legend={{\r\n                    position: \"inset\",\r\n                    padding: 0,\r\n                    inset: {\r\n                      anchor: \"top-left\",\r\n                      x: 20,\r\n                      y: 8,\r\n                      step: 10,\r\n                    },\r\n                  }}\r\n                  tooltip={{\r\n                    format: {\r\n                      title: function(x) {\r\n                        return \"\";\r\n                      },\r\n                    },\r\n                  }}\r\n                  padding={{\r\n                    bottom: 0,\r\n                    left: -1,\r\n                    right: -1,\r\n                  }}\r\n                  point={{\r\n                    show: false,\r\n                  }}\r\n                />\r\n                <Table\r\n                  cards={true}\r\n                  striped={true}\r\n                  responsive={true}\r\n                  className=\"table-vcenter\"\r\n                >\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.ColHeader colSpan={2}>User</Table.ColHeader>\r\n                      <Table.ColHeader>Commit</Table.ColHeader>\r\n                      <Table.ColHeader>Date</Table.ColHeader>\r\n                      <Table.ColHeader />\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                      <Table.Col className=\"w-1\">\r\n                        <Avatar imageURL=\"./demo/faces/male/9.jpg\" />\r\n                      </Table.Col>\r\n                      <Table.Col>Ronald Bradley</Table.Col>\r\n                      <Table.Col>Initial commit</Table.Col>\r\n                      <Table.Col className=\"text-nowrap\">May 6, 2018</Table.Col>\r\n                      <Table.Col className=\"w-1\">\r\n                        <Icon link={true} name=\"trash\" />\r\n                      </Table.Col>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Col>\r\n                        <Avatar>BM</Avatar>\r\n                      </Table.Col>\r\n                      <Table.Col>Russell Gibson</Table.Col>\r\n                      <Table.Col>Main structure</Table.Col>\r\n                      <Table.Col className=\"text-nowrap\">\r\n                        April 22, 2018\r\n                      </Table.Col>\r\n                      <Table.Col>\r\n                        <Icon link={true} name=\"trash\" />\r\n                      </Table.Col>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Col>\r\n                        <Avatar imageURL=\"./demo/faces/female/1.jpg\" />\r\n                      </Table.Col>\r\n                      <Table.Col>Beverly Armstrong</Table.Col>\r\n                      <Table.Col>Left sidebar adjustments</Table.Col>\r\n                      <Table.Col className=\"text-nowrap\">\r\n                        April 15, 2018\r\n                      </Table.Col>\r\n                      <Table.Col>\r\n                        <Icon link={true} name=\"trash\" />\r\n                      </Table.Col>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Col>\r\n                        <Avatar imageURL=\"./demo/faces/male/4.jpg\" />\r\n                      </Table.Col>\r\n                      <Table.Col>Bobby Knight</Table.Col>\r\n                      <Table.Col>Topbar dropdown style</Table.Col>\r\n                      <Table.Col className=\"text-nowrap\">April 8, 2018</Table.Col>\r\n                      <Table.Col>\r\n                        <Icon link={true} name=\"trash\" />\r\n                      </Table.Col>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                      <Table.Col>\r\n                        <Avatar imageURL=\"./demo/faces/female/11.jpg\" />\r\n                      </Table.Col>\r\n                      <Table.Col>Sharon Wells</Table.Col>\r\n                      <Table.Col>Fixes #625</Table.Col>\r\n                      <Table.Col className=\"text-nowrap\">April 9, 2018</Table.Col>\r\n                      <Table.Col>\r\n                        <Icon link={true} name=\"trash\" />\r\n                      </Table.Col>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                </Table>\r\n              </Card>\r\n            </Grid.Col>\r\n  \r\n            <Grid.Col md={6}>\r\n              <Alert type=\"primary\">\r\n                <Alert.Link\r\n                  href={\r\n                    process.env.NODE_ENV === \"production\"\r\n                      ? \"https://tabler.github.io/tabler-react/documentation\"\r\n                      : \"/documentation\"\r\n                  }\r\n                >\r\n                  Read our documentation\r\n                </Alert.Link>{\" \"}\r\n                with code samples.\r\n              </Alert>\r\n              <Grid.Row>\r\n                <Grid.Col sm={6}>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Card.Title>Chart title</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <C3Chart\r\n                        style={{ height: \"12rem\" }}\r\n                        data={{\r\n                          columns: [\r\n                            // each columns data\r\n                            [\"data1\", 63],\r\n                            [\"data2\", 37],\r\n                          ],\r\n                          type: \"donut\", // default type of chart\r\n                          colors: {\r\n                            data1: colors[\"green\"],\r\n                            data2: colors[\"green-light\"],\r\n                          },\r\n                          names: {\r\n                            // name of each serie\r\n                            data1: \"Maximum\",\r\n                            data2: \"Minimum\",\r\n                          },\r\n                        }}\r\n                        legend={{\r\n                          show: false, //hide legend\r\n                        }}\r\n                        padding={{\r\n                          bottom: 0,\r\n                          top: 0,\r\n                        }}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Grid.Col>\r\n                <Grid.Col sm={6}>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Card.Title>Chart title</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <C3Chart\r\n                        style={{ height: \"12rem\" }}\r\n                        data={{\r\n                          columns: [\r\n                            // each columns data\r\n                            [\"data1\", 63],\r\n                            [\"data2\", 44],\r\n                            [\"data3\", 12],\r\n                            [\"data4\", 14],\r\n                          ],\r\n                          type: \"pie\", // default type of chart\r\n                          colors: {\r\n                            data1: colors[\"blue-darker\"],\r\n                            data2: colors[\"blue\"],\r\n                            data3: colors[\"blue-light\"],\r\n                            data4: colors[\"blue-lighter\"],\r\n                          },\r\n                          names: {\r\n                            // name of each serie\r\n                            data1: \"A\",\r\n                            data2: \"B\",\r\n                            data3: \"C\",\r\n                            data4: \"D\",\r\n                          },\r\n                        }}\r\n                        legend={{\r\n                          show: false, //hide legend\r\n                        }}\r\n                        padding={{\r\n                          bottom: 0,\r\n                          top: 0,\r\n                        }}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Grid.Col>\r\n                <Grid.Col sm={6}>\r\n                  <ProgressCard\r\n                    header=\"New feedback\"\r\n                    content=\"62\"\r\n                    progressColor=\"red\"\r\n                    progressWidth={28}\r\n                  />\r\n                </Grid.Col>\r\n                <Grid.Col sm={6}>\r\n                  <ProgressCard\r\n                    header=\"Today profit\"\r\n                    content=\"$652\"\r\n                    progressColor=\"green\"\r\n                    progressWidth={84}\r\n                  />\r\n                </Grid.Col>\r\n                <Grid.Col sm={6}>\r\n                  <ProgressCard\r\n                    header=\"Users online\"\r\n                    content=\"76\"\r\n                    progressColor=\"yellow\"\r\n                    progressWidth={34}\r\n                  />\r\n                </Grid.Col>\r\n              </Grid.Row>\r\n            </Grid.Col>\r\n            <Grid.Col sm={6} lg={3}>\r\n              <StampCard\r\n                color=\"blue\"\r\n                icon=\"dollar-sign\"\r\n                header={\r\n                  <a href=\"#\">\r\n                    132 <small>Sales</small>\r\n                  </a>\r\n                }\r\n                footer={\"12 waiting payments\"}\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col sm={6} lg={3}>\r\n              <StampCard\r\n                color=\"green\"\r\n                icon=\"shopping-cart\"\r\n                header={\r\n                  <a href=\"#\">\r\n                    78 <small>Orders</small>\r\n                  </a>\r\n                }\r\n                footer={\"32 shipped\"}\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col sm={6} lg={3}>\r\n              <StampCard\r\n                color=\"red\"\r\n                icon=\"users\"\r\n                header={\r\n                  <a href=\"#\">\r\n                    1,352 <small>Members</small>\r\n                  </a>\r\n                }\r\n                footer={\"163 registered today\"}\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col sm={6} lg={3}>\r\n              <StampCard\r\n                color=\"yellow\"\r\n                icon=\"message-square\"\r\n                header={\r\n                  <a href=\"#\">\r\n                    132 <small>Comments</small>\r\n                  </a>\r\n                }\r\n                footer={\"16 waiting\"}\r\n              />\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n          <Grid.Row cards deck>\r\n            <Grid.Col width={12}>\r\n              <Card>\r\n                <Table\r\n                  responsive\r\n                  highlightRowOnHover\r\n                  hasOutline\r\n                  verticalAlign=\"center\"\r\n                  cards\r\n                  className=\"text-nowrap\"\r\n                >\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.ColHeader alignContent=\"center\" className=\"w-1\">\r\n                        <i className=\"icon-people\" />\r\n                      </Table.ColHeader>\r\n                      <Table.ColHeader>User</Table.ColHeader>\r\n                      <Table.ColHeader>Usage</Table.ColHeader>\r\n                      <Table.ColHeader alignContent=\"center\">\r\n                        Payment\r\n                      </Table.ColHeader>\r\n                      <Table.ColHeader>Activity</Table.ColHeader>\r\n                      <Table.ColHeader alignContent=\"center\">\r\n                        Satisfaction\r\n                      </Table.ColHeader>\r\n                      <Table.ColHeader alignContent=\"center\">\r\n                        <i className=\"icon-settings\" />\r\n                      </Table.ColHeader>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                      <Table.Col alignContent=\"center\">\r\n                        <Avatar\r\n                          imageURL=\"demo/faces/female/26.jpg\"\r\n                          className=\"d-block\"\r\n                          status=\"green\"\r\n                        />\r\n                      </Table.Col>\r\n                      <Table.Col>\r\n                        <div>Elizabeth Martin</div>\r\n                        <Text size=\"sm\" muted>\r\n                          Registered: Mar 19, 2018\r\n                        </Text>\r\n                      </Table.Col>\r\n                      <Table.Col>\r\n                        <div className=\"clearfix\">\r\n                          <div className=\"float-left\">\r\n                            <strong>42%</strong>\r\n                          </div>\r\n                          <div className=\"float-right\">\r\n                            <Text.Small muted>\r\n                              Jun 11, 2015 - Jul 10, 2015\r\n                            </Text.Small>\r\n                          </div>\r\n                        </div>\r\n                        <Progress size=\"xs\">\r\n                          <Progress.Bar color=\"yellow\" width={42} />\r\n                        </Progress>\r\n                      </Table.Col>\r\n                      <Table.Col alignContent=\"center\">\r\n                        <Icon payment name=\"visa\" />\r\n                      </Table.Col>\r\n                      <Table.Col>\r\n                        <Text size=\"sm\" muted>\r\n                          Last login\r\n                        </Text>\r\n                        <div>4 minutes ago</div>\r\n                      </Table.Col>\r\n                      <Table.Col alignContent=\"center\">42%</Table.Col>\r\n                      <Table.Col alignContent=\"center\">\r\n                        <Dropdown\r\n                          trigger={\r\n                            <Dropdown.Trigger\r\n                              icon=\"more-vertical\"\r\n                              toggle={false}\r\n                            />\r\n                          }\r\n                          position=\"right\"\r\n                          items={\r\n                            <React.Fragment>\r\n                              <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\r\n                              <Dropdown.Item icon=\"edit-2\">\r\n                                Another action{\" \"}\r\n                              </Dropdown.Item>\r\n                              <Dropdown.Item icon=\"message-square\">\r\n                                Something else here\r\n                              </Dropdown.Item>\r\n                              <Dropdown.ItemDivider />\r\n                              <Dropdown.Item icon=\"link\">\r\n                                {\" \"}\r\n                                Separated link\r\n                              </Dropdown.Item>\r\n                            </React.Fragment>\r\n                          }\r\n                        />\r\n                      </Table.Col>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                </Table>\r\n              </Card>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Col sm={6} lg={4}>\r\n              <Card title=\"Browser Stats\">\r\n                <Table className=\"card-table\">\r\n                  <Table.Row>\r\n                    <Table.Col>\r\n                      <Icon prefix=\"fa\" name=\"chrome\" className=\"text-muted\" />\r\n                    </Table.Col>\r\n                    <Table.Col>Google Chrome</Table.Col>\r\n                    <Table.Col className=\"text-right\">\r\n                      <Text RootComponent=\"span\" muted>\r\n                        23%\r\n                      </Text>\r\n                    </Table.Col>\r\n                  </Table.Row>\r\n                </Table>\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col sm={6} lg={4}>\r\n              <Card title=\"Projects\">\r\n                <Table cards>\r\n                  <Table.Row>\r\n                    <Table.Col>Admin Template</Table.Col>\r\n                    <Table.Col alignContent=\"right\">\r\n                      <Badge color=\"default\">65%</Badge>\r\n                    </Table.Col>\r\n                  </Table.Row>\r\n                </Table>\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col md={6} lg={4}>\r\n              <Card title=\"Members\">\r\n                <Card.Body>\r\n                  <ul className=\"list-unstyled list-separated\">\r\n                    <li className=\"list-separated-item\">\r\n                      <Grid.Row className=\"align-items-center\">\r\n                        <Grid.Col auto>\r\n                          <Avatar\r\n                            size=\"md\"\r\n                            className=\"d-block\"\r\n                            imageURL=\"demo/faces/female/12.jpg\"\r\n                          />\r\n                        </Grid.Col>\r\n                        <Grid.Col>\r\n                          <div>\r\n                            <a className=\"text-inherit\" href=\"#\">\r\n                              Amanda Hunt\r\n                            </a>\r\n                          </div>\r\n                          <Text.Small muted className=\"d-block item-except h-1x\">\r\n                            amanda_hunt@example.com\r\n                          </Text.Small>\r\n                        </Grid.Col>\r\n                        <Grid.Col auto>\r\n                          <Dropdown\r\n                            trigger={\r\n                              <Dropdown.Trigger\r\n                                icon=\"more-vertical\"\r\n                                toggle={false}\r\n                              />\r\n                            }\r\n                            position=\"right\"\r\n                            items={\r\n                              <React.Fragment>\r\n                                <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\r\n                                <Dropdown.Item icon=\"edit-2\">\r\n                                  {\" \"}\r\n                                  Another action{\" \"}\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item icon=\"message-square\">\r\n                                  {\" \"}\r\n                                  Something else here\r\n                                </Dropdown.Item>\r\n                                <Dropdown.ItemDivider />\r\n                                <Dropdown.Item icon=\"link\">\r\n                                  {\" \"}\r\n                                  Separated link\r\n                                </Dropdown.Item>\r\n                              </React.Fragment>\r\n                            }\r\n                          />\r\n                        </Grid.Col>\r\n                      </Grid.Row>\r\n                    </li>\r\n                  </ul>\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col md={6} lg={12}>\r\n              <Grid.Row>\r\n                <Grid.Col sm={6} lg={3}>\r\n                  <StatsCard\r\n                    layout={2}\r\n                    movement={5}\r\n                    total=\"423\"\r\n                    label=\"Users online\"\r\n                    chart={\r\n                      <C3Chart\r\n                        style={{ height: \"100%\" }}\r\n                        padding={{\r\n                          bottom: -10,\r\n                          left: -1,\r\n                          right: -1,\r\n                        }}\r\n                        data={{\r\n                          names: {\r\n                            data1: \"Users online\",\r\n                          },\r\n                          columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                          type: \"area\",\r\n                        }}\r\n                        legend={{\r\n                          show: false,\r\n                        }}\r\n                        transition={{\r\n                          duration: 0,\r\n                        }}\r\n                        point={{\r\n                          show: false,\r\n                        }}\r\n                        tooltip={{\r\n                          format: {\r\n                            title: function(x) {\r\n                              return \"\";\r\n                            },\r\n                          },\r\n                        }}\r\n                        axis={{\r\n                          y: {\r\n                            padding: {\r\n                              bottom: 0,\r\n                            },\r\n                            show: false,\r\n                            tick: {\r\n                              outer: false,\r\n                            },\r\n                          },\r\n                          x: {\r\n                            padding: {\r\n                              left: 0,\r\n                              right: 0,\r\n                            },\r\n                            show: false,\r\n                          },\r\n                        }}\r\n                        color={{\r\n                          pattern: [\"#467fcf\"],\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid.Col>\r\n                <Grid.Col sm={6} lg={3}>\r\n                  <StatsCard\r\n                    layout={2}\r\n                    movement={-3}\r\n                    total=\"423\"\r\n                    label=\"Users online\"\r\n                    chart={\r\n                      <C3Chart\r\n                        style={{ height: \"100%\" }}\r\n                        padding={{\r\n                          bottom: -10,\r\n                          left: -1,\r\n                          right: -1,\r\n                        }}\r\n                        data={{\r\n                          names: {\r\n                            data1: \"Users online\",\r\n                          },\r\n                          columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                          type: \"area\",\r\n                        }}\r\n                        legend={{\r\n                          show: false,\r\n                        }}\r\n                        transition={{\r\n                          duration: 0,\r\n                        }}\r\n                        point={{\r\n                          show: false,\r\n                        }}\r\n                        tooltip={{\r\n                          format: {\r\n                            title: function(x) {\r\n                              return \"\";\r\n                            },\r\n                          },\r\n                        }}\r\n                        axis={{\r\n                          y: {\r\n                            padding: {\r\n                              bottom: 0,\r\n                            },\r\n                            show: false,\r\n                            tick: {\r\n                              outer: false,\r\n                            },\r\n                          },\r\n                          x: {\r\n                            padding: {\r\n                              left: 0,\r\n                              right: 0,\r\n                            },\r\n                            show: false,\r\n                          },\r\n                        }}\r\n                        color={{\r\n                          pattern: [\"#e74c3c\"],\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid.Col>\r\n                <Grid.Col sm={6} lg={3}>\r\n                  <StatsCard\r\n                    layout={2}\r\n                    movement={-3}\r\n                    total=\"423\"\r\n                    label=\"Users online\"\r\n                    chart={\r\n                      <C3Chart\r\n                        style={{ height: \"100%\" }}\r\n                        padding={{\r\n                          bottom: -10,\r\n                          left: -1,\r\n                          right: -1,\r\n                        }}\r\n                        data={{\r\n                          names: {\r\n                            data1: \"Users online\",\r\n                          },\r\n                          columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                          type: \"area\",\r\n                        }}\r\n                        legend={{\r\n                          show: false,\r\n                        }}\r\n                        transition={{\r\n                          duration: 0,\r\n                        }}\r\n                        point={{\r\n                          show: false,\r\n                        }}\r\n                        tooltip={{\r\n                          format: {\r\n                            title: function(x) {\r\n                              return \"\";\r\n                            },\r\n                          },\r\n                        }}\r\n                        axis={{\r\n                          y: {\r\n                            padding: {\r\n                              bottom: 0,\r\n                            },\r\n                            show: false,\r\n                            tick: {\r\n                              outer: false,\r\n                            },\r\n                          },\r\n                          x: {\r\n                            padding: {\r\n                              left: 0,\r\n                              right: 0,\r\n                            },\r\n                            show: false,\r\n                          },\r\n                        }}\r\n                        color={{\r\n                          pattern: [\"#5eba00\"],\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid.Col>\r\n                <Grid.Col sm={6} lg={3}>\r\n                  <StatsCard\r\n                    layout={2}\r\n                    movement={9}\r\n                    total=\"423\"\r\n                    label=\"Users online\"\r\n                    chart={\r\n                      <C3Chart\r\n                        style={{ height: \"100%\" }}\r\n                        padding={{\r\n                          bottom: -10,\r\n                          left: -1,\r\n                          right: -1,\r\n                        }}\r\n                        data={{\r\n                          names: {\r\n                            data1: \"Users online\",\r\n                          },\r\n                          columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                          type: \"area\",\r\n                        }}\r\n                        legend={{\r\n                          show: false,\r\n                        }}\r\n                        transition={{\r\n                          duration: 0,\r\n                        }}\r\n                        point={{\r\n                          show: false,\r\n                        }}\r\n                        tooltip={{\r\n                          format: {\r\n                            title: function(x) {\r\n                              return \"\";\r\n                            },\r\n                          },\r\n                        }}\r\n                        axis={{\r\n                          y: {\r\n                            padding: {\r\n                              bottom: 0,\r\n                            },\r\n                            show: false,\r\n                            tick: {\r\n                              outer: false,\r\n                            },\r\n                          },\r\n                          x: {\r\n                            padding: {\r\n                              left: 0,\r\n                              right: 0,\r\n                            },\r\n                            show: false,\r\n                          },\r\n                        }}\r\n                        color={{\r\n                          pattern: [\"#f1c40f\"],\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid.Col>\r\n              </Grid.Row>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Home;\r\n\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://localhost:8762/',\r\n  responseType: 'json',\r\n  crossDomain: true\r\n})","import rest from './base_request';\r\n\r\nexport const login = (payload) => {\r\n  return rest.post(\"/auth/login\", payload);\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n  return rest.get(\"/hr/employees\", {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"token\")\r\n    }\r\n  })\r\n}","import * as types from '../constants/auth'\r\nimport {takeLatest, put, call} from 'redux-saga/effects'\r\nimport * as restAPI from '../services/auth'\r\nimport * as actions from '../actions/auth'\r\n\r\nfunction* login(action) {\r\n  try {\r\n    let response = yield call(restAPI.login, action.payload)\r\n    yield put(actions.loginSuccess(response.headers.authorization))\r\n  } catch (error) {\r\n    yield put(actions.loginError(error))\r\n  }\r\n}\r\n\r\nfunction* getCurrentUser() {\r\n  try {\r\n    let response = yield call(restAPI.getCurrentUser)\r\n    yield put(actions.getCurrentUserSuccess(response.data))\r\n  } catch (error) {\r\n    yield put(actions.getCurrentUserFailed(error))\r\n  }\r\n}\r\n\r\nexport default function* auth() {\r\n  yield takeLatest(types.AUTH_REQUEST, login)\r\n  yield takeLatest(types.GET_CURRENT_USER_REQUEST, getCurrentUser)\r\n}","import rest from './base_request';\r\n\r\nexport const getProducts = (params) => {\r\n  return rest.get(\"/order/products\", {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"token\")\r\n    },\r\n    params: params\r\n  })\r\n}","import * as types from '../constants/product'\r\nimport {takeLatest, put, call} from 'redux-saga/effects'\r\nimport * as restAPI from '../services/product'\r\nimport * as actions from '../actions/product'\r\n\r\nfunction* getProducts(action) {\r\n  try {\r\n    let response = yield call(restAPI.getProducts, action.params)\r\n    yield put(actions.fetchProductSuccess(response.data))\r\n  } catch (error) {\r\n    yield put(actions.fetchProductFailed(error))\r\n  }\r\n}\r\n\r\nexport default function* product() {\r\n  yield takeLatest(types.PRODUCT_LIST_REQUEST, getProducts)\r\n}","import rest from './base_request';\r\n\r\nexport const getCustomers = params => rest.get(\"/order/customers\", {\r\n    params: params,\r\n    headers: {\r\n        Authorization: localStorage.getItem(\"token\")\r\n    }\r\n})\r\n\r\nexport const getCustomer = id => rest.get(\"/order/customers/\" + id, {\r\n    headers: {\r\n        Authorization: localStorage.getItem(\"token\")\r\n    }\r\n})\r\n\r\nexport const getCustomerOrders = id => rest.get(\"/order/customers/\" + id + \"/orders\", {\r\n    headers: {\r\n        Authorization: localStorage.getItem(\"token\")\r\n    }\r\n})","import * as types from '../constants/customer'\r\nimport {takeLatest, put, call} from 'redux-saga/effects'\r\nimport * as restAPI from '../services/customer'\r\nimport * as actions from '../actions/customer'\r\n\r\nfunction* getCustomers(action) {\r\n  try {\r\n    let response = yield call(restAPI.getCustomers, action.params)\r\n    yield put(actions.getCustomersSuccess(response.data))\r\n  } catch (error) {\r\n    yield put(actions.getCustomersFailed(error))\r\n  }\r\n}\r\n\r\nfunction* getCustomer(action) {\r\n    try {\r\n      let response = yield call(restAPI.getCustomer, action.id)\r\n      yield put(actions.getCustomerSuccess(response.data))\r\n    } catch (error) {\r\n      yield put(actions.getCustomerFailed(error))\r\n    }\r\n}\r\n\r\nfunction* getCustomerOrders(action) {\r\n  try {\r\n    let response = yield call(restAPI.getCustomerOrders, action.id)\r\n    yield put(actions.getCustomerOrdersSuccess(response.data))\r\n  } catch (error) {\r\n    yield put(actions.getCustomerOrdersFailed(error))\r\n  }\r\n}\r\n\r\nexport default function* customer() {\r\n  yield takeLatest(types.CUSTOMER_LIST_REQUEST, getCustomers)\r\n  yield takeLatest(types.CUSTOMER_DETAIL_REQUEST, getCustomer)\r\n  yield takeLatest(types.CUSTOMER_ORDER_LIST_REQUEST, getCustomerOrders)\r\n}","export const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\"\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\"\r\nexport const ORDER_LIST_FAILED = \"ORDER_LIST_FAILED\"\r\n\r\nexport const ORDER_DETAIL_REQUEST = \"ORDER_DETAIL_REQUEST\"\r\nexport const ORDER_DETAIL_SUCCESS = \"ORDER_DETAIL_SUCCESS\"\r\nexport const ORDER_DETAIL_FAILED = \"ORDER_DETAIL_FAILED\"\r\n\r\nexport const PAYMENT_LIST_REQUEST = \"PAYMENT_LIST_REQUEST\"\r\nexport const PAYMENT_LIST_SUCCESS = \"PAYMENT_LIST_SUCCESS\"\r\nexport const PAYMENT_LIST_FAILED = \"PAYMENT_LIST_FAILED\"","import rest from './base_request'\r\n\r\nconst ORDER_SERVICE_URL = \"/order/orders/\"\r\n\r\nexport const getOrderById = id => rest.get(ORDER_SERVICE_URL + id , {\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"token\")\r\n  }\r\n})\r\n\r\nexport const getPaymentHistoriesByOrderId = id => rest.get(ORDER_SERVICE_URL + id + \"/payment-histories\", {\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"token\")\r\n  }\r\n})","import * as types from \"./../constants/order\"\r\n\r\nexport const findOrderByIdRequest = id => ({\r\n  type: types.ORDER_DETAIL_REQUEST,\r\n  id\r\n})\r\n\r\nexport const findOrderByIdSuccess = data => ({\r\n  type: types.ORDER_DETAIL_SUCCESS,\r\n  data\r\n})\r\n\r\nexport const findOrderByIdFailed = error => ({\r\n  type: types.ORDER_DETAIL_FAILED,\r\n  error\r\n})\r\n\r\nexport const findPaymentHistoryByOrderIdRequest = id => ({\r\n  type: types.PAYMENT_LIST_REQUEST,\r\n  id\r\n})\r\n\r\nexport const findPaymentHistoryByOrderIdSuccess = data => ({\r\n  type: types.PAYMENT_LIST_SUCCESS,\r\n  data\r\n})\r\n\r\nexport const findPaymentHistoryByOrderIdFailed = error => ({\r\n  type: types.PAYMENT_LIST_FAILED,\r\n  error\r\n})","import * as types from \"../constants/order\";\r\nimport { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport * as restAPI from \"../services/order\";\r\nimport * as actions from \"../actions/order\";\r\n\r\nfunction* getOrderById(action) {\r\n  try {\r\n    let response = yield call(restAPI.getOrderById, action.id);\r\n    yield put(actions.findOrderByIdSuccess(response.data));\r\n  } catch (error) {\r\n    yield put(actions.findOrderByIdFailed(error));\r\n  }\r\n}\r\n\r\nfunction* getPaymentHistoriesByOrderId(action) {\r\n  try {\r\n    let response = yield call(restAPI.getPaymentHistoriesByOrderId, action.id);\r\n    yield put(actions.findPaymentHistoryByOrderIdSuccess(response.data));\r\n  } catch (error) {\r\n    yield put(actions.findPaymentHistoryByOrderIdFailed(error));\r\n  }\r\n}\r\n\r\nexport default function* order() {\r\n  yield takeLatest(types.ORDER_DETAIL_REQUEST, getOrderById)\r\n  yield takeLatest(types.PAYMENT_LIST_REQUEST, getPaymentHistoriesByOrderId)\r\n}","import {fork} from 'redux-saga/effects'\r\nimport auth from './auth'\r\nimport product from './product'\r\nimport customer from './customer'\r\nimport order from './order'\r\n\r\nexport default function* rootSaga() {\r\n  yield fork(auth)\r\n  yield fork(product)\r\n  yield fork(customer)\r\n  yield fork(order)\r\n}","import * as types from \"../constants/auth\";\r\nimport Immutable from \"seamless-immutable\";\r\n\r\nconst DEFAULT_STATE = Immutable({\r\n  isAuthenticated: localStorage.getItem(\"token\") != null,\r\n  isRequesting: false,\r\n  user: null,\r\n  error: null\r\n});\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.AUTH_REQUEST:\r\n      return state.setIn([\"isRequesting\"], true).setIn([\"error\"], null);\r\n    case types.AUTH_SUCCESS:\r\n      localStorage.setItem(\"token\", action.data);\r\n      return state\r\n        .setIn([\"isAuthenticated\"], true)\r\n        .setIn([\"isRequesting\"], false);\r\n    case types.AUTH_FAILED:\r\n      return state\r\n        .setIn([\"error\"], action.error)\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"isAuthenticated\"], false);\r\n    case types.GET_CURRENT_USER_SUCCESS:\r\n      return state.setIn([\"user\"], action.data);\r\n    case types.GET_CURRENT_USER_FAILED:\r\n      localStorage.removeItem(\"token\");\r\n      return state\r\n        .setIn([\"user\"], null)\r\n        .setIn([\"error\", action.error])\r\n        .setIn([\"isAuthenticated\", false]);\r\n    case types.LOGOUT_REQUEST:\r\n      localStorage.removeItem(\"token\");\r\n      return state\r\n        .setIn([\"user\"], null)\r\n        .setIn([\"isAuthenticated\"], false)\r\n        .setIn(['error'], null);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../constants/product\";\r\nimport Immutable from \"seamless-immutable\";\r\n\r\nconst DEFAULT_STATE = Immutable({\r\n  products: null,\r\n  isRequesting: false,\r\n  error: null\r\n});\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.PRODUCT_LIST_REQUEST:\r\n      return state.setIn([\"isRequesting\"], true)\r\n                  .setIn([\"products\"], null)\r\n                  .setIn([\"error\"], null);\r\n    case types.PRODUCT_LIST_SUCCESS:\r\n      return state.setIn([\"isRequesting\"], false)\r\n                  .setIn([\"products\"], action.data)\r\n                  .setIn([\"error\"], null);\r\n    case types.PRODUCT_LIST_FAILED:\r\n      return state.setIn([\"isRequesting\"], false)\r\n                  .setIn([\"products\"], null)\r\n                  .setIn([\"error\"], action.error);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../constants/customer\";\r\nimport Immutable from \"seamless-immutable\";\r\n\r\nconst DEFAULT_STATE = Immutable({\r\n  customers: null,\r\n  isRequesting: false,\r\n  customer: null,\r\n  error: null,\r\n  orders: null\r\n});\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.CUSTOMER_DETAIL_REQUEST:\r\n      return state\r\n        .setIn([\"isRequesting\"], true)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"customer\"], null);\r\n    case types.CUSTOMER_DETAIL_SUCCESS:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"customer\"], action.data);\r\n    case types.CUSTOMER_DETAIL_FAILED:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], action.error)\r\n        .setIn([\"customer\"], null);\r\n    case types.CUSTOMER_LIST_REQUEST:\r\n      return state\r\n        .setIn([\"isRequesting\"], true)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"customers\"], null);\r\n    case types.CUSTOMER_LIST_SUCCESS:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"customers\"], action.data);\r\n    case types.CUSTOMER_LIST_FAILED:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], action.error)\r\n        .setIn([\"customers\"], null);\r\n    case types.CUSTOMER_ORDER_LIST_REQUEST:\r\n      return state\r\n        .setIn([\"isRequesting\"], true)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"customers\"], null);\r\n    case types.CUSTOMER_ORDER_LIST_SUCCESS:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"orders\"], action.data);\r\n    case types.CUSTOMER_ORDER_LIST_FAILED:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], action.error)\r\n        .setIn([\"orders\"], null);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../constants/order\";\r\nimport Immutable from \"seamless-immutable\";\r\n\r\nconst DEFAULT_STATE = Immutable({\r\n  order: null,\r\n  paymentHistories: null,\r\n  error: null,\r\n  isRequesting: false\r\n});\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.ORDER_DETAIL_REQUEST:\r\n      return state\r\n        .setIn([\"isRequesting\"], true)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"order\"], null);\r\n    case types.ORDER_DETAIL_SUCCESS:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"order\"], action.data);\r\n    case types.PAYMENT_LIST_REQUEST:\r\n      return state\r\n        .setIn([\"isRequesting\"], true)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"paymentHistories\"], null);\r\n    case types.PAYMENT_LIST_SUCCESS:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], null)\r\n        .setIn([\"paymentHistories\"], action.data);\r\n    case types.PAYMENT_LIST_FAILED:\r\n      return state\r\n        .setIn([\"isRequesting\"], false)\r\n        .setIn([\"error\"], action.error)\r\n        .setIn([\"paymentHistories\"], null);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport product from \"./product\";\r\nimport customer from \"./customer\";\r\nimport order from \"./order\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  product,\r\n  customer,\r\n  order\r\n});\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { routerReducer } from \"react-router-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport rootSaga from \"./sagas\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  return {\r\n    ...createStore(\r\n      combineReducers({ ...reducers, routing: routerReducer }),\r\n      composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n    ),\r\n    runSaga: sagaMiddleware.run(rootSaga)\r\n  };\r\n};\r\n\r\nexport default configureStore();\r\n","// @flow\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { LoginPage as TablerLoginPage } from \"tabler-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginPage extends Component {\r\n  render() {\r\n    return this.props.isAuthenticated ? (\r\n      <Redirect to=\"/\" />\r\n    ) : (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, setErrors }) => {\r\n          this.props.actions.loginRequest({\r\n            username: values.email,\r\n            password: values.password\r\n          });\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <TablerLoginPage\r\n            onSubmit={handleSubmit}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            values={values}\r\n            errors={errors}\r\n            touched={touched}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.default.auth.isAuthenticated,\r\n    routing: state.routing.locationBeforeTransitions\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators({ ...actions.auth }, dispatch),\r\n    dispatch\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"./../actions\";\r\n\r\nclass LogoutPage extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.actions.logout();\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <Redirect to=\"/\" />\r\n        );\r\n      }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      actions: bindActionCreators({ ...actions.auth }, dispatch),\r\n      dispatch\r\n    };\r\n  };\r\n\r\nexport default connect(null, mapDispatchToProps)(LogoutPage);","import React, { Component } from \"react\";\r\nimport SiteWrapper from \"../components/shared/SiteWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions\";\r\n\r\nimport { Page, Avatar, Grid, Card, Text, Table, Button } from \"tabler-react\";\r\n\r\nclass CustomerPage extends Component {\r\n  componentDidMount = () => {\r\n    this.props.actions.getCustomers();\r\n  };\r\n\r\n  shouldComponentUpdate = nextProps => {\r\n    return nextProps.customers != this.props.customers;\r\n  };\r\n\r\n  showItem = customer => {\r\n    this.props.history.push(\"/customer/\" + customer.id);\r\n  };\r\n\r\n  render() {\r\n    let customers = this.props.customers;\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content title=\"Customer Dashboard\">\r\n          <Grid.Row cards deck>\r\n            <Grid.Col width={12}>\r\n              <Card>\r\n                <Table\r\n                  responsive\r\n                  highlightRowOnHover\r\n                  hasOutline\r\n                  verticalAlign=\"center\"\r\n                  cards\r\n                  className=\"text-nowrap\"\r\n                >\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.ColHeader alignContent=\"center\" className=\"w-1\">\r\n                        <i className=\"icon-people\" />\r\n                      </Table.ColHeader>\r\n                      <Table.ColHeader>Name</Table.ColHeader>\r\n                      <Table.ColHeader>Phone</Table.ColHeader>\r\n                      <Table.ColHeader alignContent=\"center\">\r\n                        <i className=\"icon-settings\" />\r\n                      </Table.ColHeader>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {customers &&\r\n                      customers.map(customer => (\r\n                        <Table.Row key={customer.id}>\r\n                          <Table.Col alignContent=\"center\">\r\n                            <Avatar\r\n                              imageURL=\"demo/faces/female/26.jpg\"\r\n                              className=\"d-block\"\r\n                              status=\"red\"\r\n                            />\r\n                          </Table.Col>\r\n                          <Table.Col>\r\n                            <div>{customer.name}</div>\r\n                          </Table.Col>\r\n                          <Table.Col>\r\n                            <div>{customer.phone}</div>\r\n                          </Table.Col>\r\n                          <Table.Col>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => this.showItem(customer)}\r\n                            >\r\n                              Chi tiết\r\n                            </Button>\r\n                          </Table.Col>\r\n                        </Table.Row>\r\n                      ))}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Card>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customers: state.default.customer.customers,\r\n  routing: state.routing.locationBeforeTransitions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ ...actions.customer }, dispatch),\r\n  dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerPage);\r\n","import React, { Component } from \"react\";\r\nimport SiteWrapper from \"../components/shared/SiteWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions\";\r\n\r\nimport { Page, Grid, Card } from \"tabler-react\";\r\n\r\nimport { Table } from \"antd\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Tên chương trình\",\r\n    dataIndex: \"name\",\r\n    key: \"name\"\r\n  },\r\n  {\r\n    title: \"Loại thẻ\",\r\n    dataIndex: \"cardType\",\r\n    key: \"cardType\"\r\n  },\r\n  {\r\n    title: \"Mùa du lịch\",\r\n    dataIndex: \"seasonType\",\r\n    key: \"seasonType\"\r\n  },\r\n  {\r\n    title: \"Số phòng\",\r\n    dataIndex: \"roomType\",\r\n    key: \"roomType\"\r\n  },\r\n  {\r\n    title: \"Đơn giá / 01 đêm\",\r\n    dataIndex: \"unitPrice\",\r\n    key: \"unitPrice\"\r\n  },\r\n  {\r\n    title: \"Giá trị thẻ\",\r\n    dataIndex: \"cardValue\",\r\n    key: \"cardValue\"\r\n  },\r\n  {\r\n    title: \"Phí thường niên\",\r\n    dataIndex: \"annualFee\",\r\n    key: \"annualFee\"\r\n  },\r\n  {\r\n    title: \"Phí đăng ký lại / lần\",\r\n    dataIndex: \"reSignFee\",\r\n    key: \"reSignFee\"\r\n  }\r\n];\r\n\r\nconst mapProductToDataSource = product => ({\r\n  name: product.name,\r\n  cardType: product.cardType.name,\r\n  seasonType: product.seasonType.name,\r\n  roomType: product.roomType.name,\r\n  unitPrice: product.unitPrice,\r\n  cardValue: 7 * product.unitPrice * product.cardType.quantity,\r\n  annualFee: product.annualFee,\r\n  reSignFee: product.reSignFee\r\n});\r\n\r\nclass ProductPage extends Component {\r\n  componentDidMount = () => {\r\n    this.props.actions.fetchProductRequest();\r\n  };\r\n\r\n  shouldComponentUpdate = nextProps => {\r\n    return nextProps.products != this.props.products;\r\n  };\r\n\r\n  render() {\r\n    let dataSource =\r\n      this.props.products && this.props.products.map(mapProductToDataSource);\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content title=\"Product Dashboard\">\r\n          <Grid.Row cards deck>\r\n            <Grid.Col width={12}>\r\n              <Card>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Card>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.default.product.products,\r\n    routing: state.routing.locationBeforeTransitions\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators({ ...actions.product }, dispatch),\r\n    dispatch\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);","import React, { Component } from \"react\";\r\nimport { Table, Button } from \"antd\";\r\n\r\nconst mapOrderToDataSource = order => ({\r\n  id: order.id,\r\n  cardName: order.cardName,\r\n  contractValue: order.contractValue,\r\n  contractValueVat: order.contractValueVat,\r\n  teleSale: order.teleSale ? order.teleSale.name : null,\r\n  sale: order.sale ? order.sale.name : null,\r\n  saleAdmin: order.saleAdmin ? order.saleAdmin.name : null,\r\n  saleManager: order.saleManager ? order.saleManager.name : null\r\n});\r\n\r\nexport default class OrderTable extends Component {\r\n  shouldComponentUpdate = nextProps => {\r\n    return nextProps != this.props;\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      title: \"Mã hợp đồng\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Tên hợp đồng\",\r\n      dataIndex: \"cardName\",\r\n      key: \"cardName\"\r\n    },\r\n    {\r\n      title: \"Giá trị hợp đồng\",\r\n      dataIndex: \"contractValue\",\r\n      key: \"contractValue\"\r\n    },\r\n    {\r\n      title: \"Giá trị hợp đồng (VAT)\",\r\n      dataIndex: \"contractValueVat\",\r\n      key: \"contractValueVat\"\r\n    },\r\n    {\r\n      title: \"Tele Sale\",\r\n      dataIndex: \"teleSale\",\r\n      key: \"teleSale\"\r\n    },\r\n    {\r\n      title: \"Sale\",\r\n      dataIndex: \"sale\",\r\n      key: \"sale\"\r\n    },\r\n    {\r\n      title: \"Sale Admin\",\r\n      dataIndex: \"saleAdmin\",\r\n      key: \"saleAdmin\"\r\n    },\r\n    {\r\n      title: \"Sale Manager\",\r\n      dataIndex: \"saleManager\",\r\n      key: \"saleManager\"\r\n    },\r\n    {\r\n      key: \"operation\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      render: (text, record) => <Button type=\"primary\" onClick={() => this.logRecord(record)}>Chi tiết</Button>\r\n    }\r\n  ];\r\n\r\n  logRecord = record => {\r\n    this.props.history.push(\"/order/\" + record.id);\r\n  }\r\n\r\n  render = () => {\r\n    let dataSource = this.props.dataSource\r\n      ? this.props.dataSource.map(mapOrderToDataSource)\r\n      : null;\r\n    return (\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={this.columns}\r\n        scroll={{ x: 1500, y: 1200 }}\r\n        rowKey={rowItem => rowItem.id}\r\n      />\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Descriptions, Card, Table } from \"antd\";\r\nimport SiteWrapper from \"../components/shared/SiteWrapper\";\r\nimport { Page, Grid, StatsCard } from \"tabler-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport OrderTable from \"../components/shared/OrderTable\";\r\n\r\nclass CustomerDetailPage extends Component {\r\n  componentDidMount = () => {\r\n    this.props.actions.getCustomer(this.props.match.params.id);\r\n    this.props.actions.getCustomerOrders(this.props.match.params.id);\r\n  };\r\n\r\n  shouldComponentUpdate = nextProps => {\r\n    return nextProps.customer !== this.props.customer;\r\n  };\r\n\r\n  render = () => {\r\n    let customer = this.props.customer.customer;\r\n    let orders = this.props.customer.orders;\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content title=\"\">\r\n          <Grid.Row cards deck>\r\n            <Grid.Col width={12}>\r\n              <Card>\r\n                {customer && (\r\n                  <Descriptions title=\"Thông tin khách hàng\">\r\n                    <Descriptions.Item label=\"Họ tên\">\r\n                      {customer.name}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Điện thoại\">\r\n                      {customer.phone}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Trạng thái\">\r\n                      Active\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Địa chỉ\">\r\n                      {customer.address1}\r\n                    </Descriptions.Item>\r\n                  </Descriptions>\r\n                )}\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col width={0} sm={0} lg={3} />\r\n            \r\n            <Grid.Col width={6} sm={6} lg={3}>\r\n              {orders && <StatsCard\r\n                layout={1}\r\n                movement={0}\r\n                total={orders.length}\r\n                label=\"Tổng số hợp đồng\"\r\n              />}\r\n            </Grid.Col>\r\n            <Grid.Col width={6} sm={6} lg={3}>\r\n              {orders && <StatsCard\r\n                layout={1}\r\n                movement={6}\r\n                total={orders.reduce((sum, order) => sum + order.contractValueVat, 0)}\r\n                label=\"Tổng giá trị hợp đồng\"\r\n              />}\r\n            </Grid.Col>\r\n            <Grid.Col width={0} sm={0} lg={3} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Col width={12}>\r\n              <Card>\r\n                <OrderTable dataSource={this.props.customer.orders} history={this.props.history} />\r\n              </Card>\r\n            </Grid.Col>                  \r\n          </Grid.Row>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customer: state.default.customer,\r\n  routing: state.routing.locationBeforeTransitions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ ...actions.customer }, dispatch),\r\n  dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetailPage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Descriptions, Card, Table } from \"antd\";\r\nimport SiteWrapper from \"../components/shared/SiteWrapper\";\r\nimport { Page, Grid, StatsCard } from \"tabler-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions/order\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Mã hoá đơn\",\r\n    dataIndex: \"id\",\r\n    key: \"id\"\r\n  },\r\n  {\r\n    title: \"Ngày thanh toán\",\r\n    dataIndex: \"paymentDate\",\r\n    key: \"paymentDate\"\r\n  },\r\n  {\r\n    title: \"Khoản thanh toán\",\r\n    dataIndex: \"value\",\r\n    key: \"value\"\r\n  },\r\n  {\r\n    title: \"Khoản thanh toán (VAT)\",\r\n    dataIndex: \"valueVat\",\r\n    key: \"valueVat\"\r\n  },\r\n  {\r\n    title: \"Loại hình thanh toán\",\r\n    dataIndex: \"paymentType\",\r\n    key: \"paymentType\"\r\n  },\r\n  {\r\n    title: \"Ghi chú\",\r\n    dataIndex: \"note\",\r\n    key: \"note\"\r\n  }\r\n]\r\n\r\nconst mapToDataSource = data => ({\r\n  id: data.id,\r\n  paymentDate: data.date,\r\n  value: data.value,\r\n  valueVat: data.valueVat,\r\n  paymentType: data.type,\r\n  note: data.comment\r\n})\r\n\r\nclass OrderDetailPage extends Component {\r\n\r\n  shouldComponentUpdate = nextProps => this.props.order !== nextProps.order\r\n\r\n  componentDidMount = () => {\r\n    this.props.actions.findOrderByIdRequest(this.props.match.params.id)\r\n    this.props.actions.findPaymentHistoryByOrderIdRequest(this.props.match.params.id)\r\n  }\r\n\r\n  render = () => {\r\n    let dataSource = this.props.order.paymentHistories ? this.props.order.paymentHistories.map(mapToDataSource) : null\r\n    let order = this.props.order.order;\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content>\r\n          <Grid.Row>\r\n            <Grid.Col>\r\n            <Card>\r\n                {order && (\r\n                  <Descriptions title=\"Thông tin chi tiết hợp đồng\">\r\n                    <Descriptions.Item label=\"Mã hợp đồng\">\r\n                      {order.id}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Tên dịch vụ\">\r\n                      {order.cardName}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Ngày thành lập\">\r\n                      {order.date}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Giá trị hợp đồng\">\r\n                      {order.contractValue}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Giá trị hợp đồng (VAT)\">\r\n                      {order.contractValueVat}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Chiết khấu\">\r\n                      {`${order.discount}%/70%`}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Trạng thái\">\r\n                      {order.status}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Tele Sale\">\r\n                      {order.teleSale ? order.teleSale.name : null}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Sale\">\r\n                      {order.sale ? order.sale.name : null}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Sale Admin\">\r\n                      {order.saleAdmin ? order.saleAdmin.name : null}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Sale Manager\">\r\n                      {order.saleManager ? order.saleManager.name : null}\r\n                    </Descriptions.Item>\r\n                  </Descriptions>\r\n                )}\r\n              </Card>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Col width={12}>\r\n              <Card>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Card>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  order: state.default.order\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ ...actions }, dispatch),\r\n  dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetailPage);","import * as React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Home from \"./pages/Home\";\r\n\r\nimport 'antd/dist/antd.css';\r\nimport \"tabler-react/dist/Tabler.css\";\r\n\r\n\r\nimport store from \"./store\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport LogoutPage from \"./pages/LogoutPage\"\r\nimport CustomerPage from \"./pages/CustomerPage\";\r\nimport ProductPage from \"./pages/ProductPage\";\r\nimport CustomerDetailPage from \"./pages/CustomerDetailPage\";\r\nimport OrderDetailPage from \"./pages/OrderDetailPage\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={LoginPage} />\r\n              <Route exact path=\"/logout\" component={LogoutPage} />\r\n              <Route exact path=\"/customer\" component={CustomerPage} />\r\n              <Route exact path=\"/customer/:id\" component={CustomerDetailPage} />\r\n              <Route exact path=\"/product\" component={ProductPage} />\r\n              <Route exact path=\"/order/:id\" component={OrderDetailPage} />\r\n            </Switch>\r\n          </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './c3jscustom.css';\r\n\r\nimport {IntlProvider} from 'react-intl';\r\n\r\nReactDOM.render(\r\n  <IntlProvider locale=\"en\">\r\n      <App />\r\n  </IntlProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}